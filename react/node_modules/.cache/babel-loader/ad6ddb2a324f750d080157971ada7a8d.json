{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/workspace/React/firebase-tutorial/src/components/Session/withAuthentication.js\";\nimport React from \"react\";\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(authUser => {\n        this.setState({\n          authUser\n        });\n      }, () => {\n        this.setState({\n          authUser: null\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Provider, {\n        value: this.state.authUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })));\n    }\n\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","map":{"version":3,"sources":["/Users/kyle/workspace/React/firebase-tutorial/src/components/Session/withAuthentication.js"],"names":["React","AuthUserContext","withFirebase","withAuthentication","Component","WithAuthentication","constructor","props","state","authUser","componentDidMount","listener","firebase","onAuthUserListener","setState","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,kBAAkB,GAAGC,SAAS,IAAI;AACtC,QAAMC,kBAAN,SAAiCL,KAAK,CAACI,SAAvC,CAAiD;AAC/CE,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AAEA,WAAKC,KAAL,GAAa;AACXC,QAAAA,QAAQ,EAAE;AADC,OAAb;AAGD;;AAEDC,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,kBAApB,CACdJ,QAAQ,IAAI;AACV,aAAKK,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACD,OAHa,EAId,MAAM;AACJ,aAAKK,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OANa,CAAhB;AAQD;;AAEDM,IAAAA,oBAAoB,GAAG;AACrB,WAAKJ,QAAL;AACD;;AAEDK,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,oBAAe,KAAKF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AA9B8C;;AAgCjD,SAAOL,YAAY,CAACG,kBAAD,CAAnB;AACD,CAlCD;;AAoCA,eAAeF,kBAAf","sourcesContent":["import React from \"react\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          this.setState({ authUser });\n        },\n        () => {\n          this.setState({ authUser: null });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n"]},"metadata":{},"sourceType":"module"}