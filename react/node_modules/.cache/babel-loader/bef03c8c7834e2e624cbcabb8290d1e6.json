{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/React/firebase-tutorial/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kyle/workspace/React/firebase-tutorial/src/components/Home/index.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nconst HomePage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Home Page\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"You are authenticated.\"), React.createElement(Messages, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      message: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.messages().on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => _objectSpread({}, messageObject[key], {\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          messages: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Loading ...\"), messages ? React.createElement(MessageList, {\n      messages: messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"There are no messages...\"));\n  }\n\n}\n\nconst MessageList = ({\n  messages\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, messages.map(message => React.createElement(MessageItem, {\n  key: message.uid,\n  message: message,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n})));\n\nconst MessageItem = ({\n  message\n}) => React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, message.userId), \" \", message.text);\n\nconst Messages = withFirebase(MessagesBase);\n\nconst condition = authUser => !!authUser; //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(HomePage);","map":{"version":3,"sources":["/Users/kyle/workspace/React/firebase-tutorial/src/components/Home/index.js"],"names":["React","Component","compose","withAuthorization","withFirebase","HomePage","MessagesBase","constructor","props","state","loading","message","componentDidMount","setState","firebase","messages","on","snapshot","messageObject","val","messageList","Object","keys","map","key","uid","componentWillUnmount","off","render","MessageList","MessageItem","userId","text","Messages","condition","authUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>You are authenticated.</p>\n\n    <Messages />\n  </div>\n);\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      message: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.messages().on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => ({\n          ...messageObject[key],\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({ messages: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const { messages, loading } = this.state;\n\n    return (\n      <div>\n        {loading && <div>Loading ...</div>}\n\n        {messages ? (\n          <MessageList messages={messages} />\n        ) : (\n          <div>There are no messages...</div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst MessageList = ({ messages }) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem key={message.uid} message={message} />\n    ))}\n  </ul>\n);\n\nconst MessageItem = ({ message }) => (\n  <li>\n    <strong>{message.userId}</strong> {message.text}\n  </li>\n);\n\nconst Messages = withFirebase(MessagesBase);\n\nconst condition = authUser => !!authUser;\n\n//or equivalently:\n//const condition = authUser => authUser != null;\n\nexport default withAuthorization(condition)(HomePage);\n"]},"metadata":{},"sourceType":"module"}