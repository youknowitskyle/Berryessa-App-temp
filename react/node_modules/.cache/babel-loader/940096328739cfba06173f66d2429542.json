{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Home/index.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\n\nconst HomePage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Home Page\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"You are authenticated.\"), React.createElement(Messages, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Announcements\"));\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onChangeTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.onCreateAnnouncement = (event, authUser) => {\n      this.props.firebase.announcements().push({\n        title: this.state.title,\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        username: authUser.username\n      });\n      this.setState({\n        title: \"\",\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveAnnouncement = uid => {\n      this.props.firebase.announcement(uid).remove();\n    };\n\n    this.onEditAnnouncement = (announcement, title, text) => {\n      const uid = announcement.uid,\n            announcementSnapshot = _objectWithoutProperties(announcement, [\"uid\"]);\n\n      this.props.firebase.announcement(announcement.uid).set(_objectSpread({}, announcementSnapshot, {\n        title,\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.state = {\n      title: \"\",\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => _objectSpread({}, announcementObject[key], {\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          announcements: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          text = _this$state.text,\n          announcements = _this$state.announcements,\n          loading = _this$state.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Loading ...\"), announcements ? React.createElement(AnnouncementList, {\n      authUser: authUser,\n      announcements: announcements,\n      onEditAnnouncement: this.onEditAnnouncement,\n      onRemoveAnnouncement: this.onRemoveAnnouncement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"There are no announcements...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateAnnouncement(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: title,\n      placeholder: \"Title\",\n      onChange: this.onChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      placeholder: \"Body\",\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst AnnouncementList = ({\n  authUser,\n  announcements,\n  onRemoveAnnouncement,\n  onEditAnnouncement\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, announcements.map(announcement => React.createElement(AnnouncementItem, {\n  authUser: authUser,\n  key: announcement.uid,\n  announcement: announcement,\n  onEditAnnouncement: onEditAnnouncement,\n  onRemoveAnnouncement: onRemoveAnnouncement,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n})));\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editTitle: this.props.announcement.title,\n        editText: this.props.announcement.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onChangeEditTitle = event => {\n      this.setState({\n        editTitle: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditAnnouncement(this.props.announcement, this.state.editTitle, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editTitle: this.props.announcement.title,\n      editText: this.props.announcement.text\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          announcement = _this$props.announcement,\n          onRemoveAnnouncement = _this$props.onRemoveAnnouncement;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editTitle = _this$state2.editTitle,\n          editText = _this$state2.editText;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, announcement.title), \" \", announcement.text, \" (Posted by\", \" \", announcement.username, \")\", announcement.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \" (Edited) \")));\n  }\n\n}\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateMessage = (event, authUser) => {\n      this.props.firebase.messages().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        username: authUser.username\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveMessage = uid => {\n      this.props.firebase.message(uid).remove();\n    };\n\n    this.onEditMessage = (message, text) => {\n      const uid = message.uid,\n            messageSnapshot = _objectWithoutProperties(message, [\"uid\"]);\n\n      this.props.firebase.message(message.uid).set(_objectSpread({}, messageSnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      message: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.messages().on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => _objectSpread({}, messageObject[key], {\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          messages: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          text = _this$state3.text,\n          messages = _this$state3.messages,\n          loading = _this$state3.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Loading ...\"), messages ? React.createElement(MessageList, {\n      authUser: authUser,\n      messages: messages,\n      onEditMessage: this.onEditMessage,\n      onRemoveMessage: this.onRemoveMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"There are no messages...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateMessage(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onRemoveMessage,\n  onEditMessage\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 324\n  },\n  __self: this\n}, messages.map(message => React.createElement(MessageItem, {\n  authUser: authUser,\n  key: message.uid,\n  message: message,\n  onEditMessage: onEditMessage,\n  onRemoveMessage: onRemoveMessage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 326\n  },\n  __self: this\n})));\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.message.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditMessage(this.props.message, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          authUser = _this$props2.authUser,\n          message = _this$props2.message,\n          onRemoveMessage = _this$props2.onRemoveMessage;\n    const _this$state4 = this.state,\n          editMode = _this$state4.editMode,\n          editText = _this$state4.editText;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, message.username), \" \", message.text, message.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \" (Edited) \")), authUser.uid === message.userId && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveMessage(message.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst Messages = withFirebase(MessagesBase);\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser => !!authUser; //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(HomePage);","map":{"version":3,"sources":["/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Home/index.js"],"names":["React","Component","compose","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","tsImportEqualsDeclaration","HomePage","AnnouncementsBase","constructor","props","onChangeText","event","setState","text","target","value","onChangeTitle","title","onCreateAnnouncement","authUser","firebase","announcements","push","state","userId","uid","createdAt","serverValue","TIMESTAMP","username","preventDefault","onRemoveAnnouncement","announcement","remove","onEditAnnouncement","announcementSnapshot","set","editedAt","loading","componentDidMount","on","snapshot","announcementObject","val","announcementList","Object","keys","map","key","componentWillUnmount","off","render","AnnouncementList","AnnouncementItem","onToggleEditMode","editMode","editTitle","editText","onChangeEditText","onChangeEditTitle","onSaveEditText","MessagesBase","onCreateMessage","messages","onRemoveMessage","message","onEditMessage","messageSnapshot","messageObject","messageList","MessageList","MessageItem","Messages","Announcements","condition"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>You are authenticated.</p>\n\n    <Messages />\n\n    <br />\n    <h2>Announcements</h2>\n  </div>\n);\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onChangeTitle = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  onCreateAnnouncement = (event, authUser) => {\n    this.props.firebase.announcements().push({\n      title: this.state.title,\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n      username: authUser.username\n    });\n\n    this.setState({ title: \"\", text: \"\" });\n\n    event.preventDefault();\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => ({\n          ...announcementObject[key],\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({ announcements: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  onRemoveAnnouncement = uid => {\n    this.props.firebase.announcement(uid).remove();\n  };\n\n  onEditAnnouncement = (announcement, title, text) => {\n    const { uid, ...announcementSnapshot } = announcement;\n\n    this.props.firebase.announcement(announcement.uid).set({\n      ...announcementSnapshot,\n      title,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  render() {\n    const { title, text, announcements, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {loading && <div>Loading ...</div>}\n\n            {announcements ? (\n              <AnnouncementList\n                authUser={authUser}\n                announcements={announcements}\n                onEditAnnouncement={this.onEditAnnouncement}\n                onRemoveAnnouncement={this.onRemoveAnnouncement}\n              />\n            ) : (\n              <div>There are no announcements...</div>\n            )}\n\n            <form\n              onSubmit={event => this.onCreateAnnouncement(event, authUser)}\n            >\n              <input\n                type=\"text\"\n                value={title}\n                placeholder=\"Title\"\n                onChange={this.onChangeTitle}\n              />\n              <input\n                type=\"text\"\n                value={text}\n                placeholder=\"Body\"\n                onChange={this.onChangeText}\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst AnnouncementList = ({\n  authUser,\n  announcements,\n  onRemoveAnnouncement,\n  onEditAnnouncement\n}) => (\n  <ul>\n    {announcements.map(announcement => (\n      <AnnouncementItem\n        authUser={authUser}\n        key={announcement.uid}\n        announcement={announcement}\n        onEditAnnouncement={onEditAnnouncement}\n        onRemoveAnnouncement={onRemoveAnnouncement}\n      />\n    ))}\n  </ul>\n);\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editTitle: this.props.announcement.title,\n      editText: this.props.announcement.text\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editTitle: this.props.announcement.title,\n      editText: this.props.announcement.text\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onChangeEditTitle = event => {\n    this.setState({ editTitle: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditAnnouncement(\n      this.props.announcement,\n      this.state.editTitle,\n      this.state.editText\n    );\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, announcement, onRemoveAnnouncement } = this.props;\n    const { editMode, editTitle, editText } = this.state;\n\n    return (\n      <li>\n        {\n          <span>\n            <strong>{announcement.title}</strong> {announcement.text} (Posted by{\" \"}\n            {announcement.username})\n            {announcement.editedAt && <span> (Edited) </span>}\n          </span>\n        }\n      </li>\n    );\n  }\n}\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      message: []\n    };\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n      username: authUser.username\n    });\n\n    this.setState({ text: \"\" });\n\n    event.preventDefault();\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.messages().on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => ({\n          ...messageObject[key],\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({ messages: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onEditMessage = (message, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  render() {\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {loading && <div>Loading ...</div>}\n\n            {messages ? (\n              <MessageList\n                authUser={authUser}\n                messages={messages}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            ) : (\n              <div>There are no messages...</div>\n            )}\n\n            <form onSubmit={event => this.onCreateMessage(event, authUser)}>\n              <input type=\"text\" value={text} onChange={this.onChangeText} />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onRemoveMessage,\n  onEditMessage\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        authUser={authUser}\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>{message.username}</strong> {message.text}\n            {message.editedAt && <span> (Edited) </span>}\n          </span>\n        )}\n        {authUser.uid === message.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <button onClick={this.onSaveEditText}>Save</button>\n                <button onClick={this.onToggleEditMode}>Reset</button>\n              </span>\n            ) : (\n              <button onClick={this.onToggleEditMode}>Edit</button>\n            )}\n\n            {!editMode && (\n              <button\n                type=\"button\"\n                onClick={() => onRemoveMessage(message.uid)}\n              >\n                Delete\n              </button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\n\nconst Messages = withFirebase(MessagesBase);\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser => !!authUser;\n\n//or equivalently:\n//const condition = authUser => authUser != null;\n\nexport default withAuthorization(condition)(HomePage);\n"]},"metadata":{},"sourceType":"module"}