{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Moderator/index.js\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../Firebase\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst ModeratorPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Moderator\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"The Moderator Page is accessible by every signed in moderator user.\"), React.createElement(Announcements, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}));\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateAnnouncement = (event, authUser) => {\n      this.props.firebase.announcements().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        username: authUser.username\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveAnnouncement = uid => {\n      this.props.firebase.announcement(uid).remove();\n    };\n\n    this.onEditAnnouncement = (announcement, text) => {\n      const _message = message,\n            uid = _message.uid,\n            messageSnapshot = _objectWithoutProperties(_message, [\"uid\"]);\n\n      this.props.firebase.message(message.uid).set(_objectSpread({}, messageSnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => _objectSpread({}, announcementObject[key], {\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          announcements: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Loading ...\"), messages ? React.createElement(MessageList, {\n      authUser: authUser,\n      messages: messages,\n      onEditMessage: this.onEditMessage,\n      onRemoveMessage: this.onRemoveMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"There are no messages...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateMessage(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onRemoveMessage,\n  onEditMessage\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, messages.map(message => React.createElement(MessageItem, {\n  authUser: authUser,\n  key: message.uid,\n  message: message,\n  onEditMessage: onEditMessage,\n  onRemoveMessage: onRemoveMessage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n})));\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.message.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditMessage(this.props.message, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          message = _this$props.message,\n          onRemoveMessage = _this$props.onRemoveMessage;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editText = _this$state2.editText;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, message.username), \" \", message.text, message.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" (Edited) \")), authUser.uid === message.userId && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveMessage(message.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst Messages = withFirebase(MessagesBase);\n\nconst condition = authUser => authUser && (!!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.ADMIN]);\n\nexport default compose(withAuthorization(condition), withFirebase)(ModeratorPage);","map":{"version":3,"sources":["/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Moderator/index.js"],"names":["React","Component","Switch","Route","Link","compose","withFirebase","AuthUserContext","withAuthorization","withEmailVerification","ROLES","ROUTES","ModeratorPage","AnnouncementsBase","constructor","props","onChangeText","event","setState","text","target","value","onCreateAnnouncement","authUser","firebase","announcements","push","state","userId","uid","createdAt","serverValue","TIMESTAMP","username","preventDefault","onRemoveAnnouncement","announcement","remove","onEditAnnouncement","message","messageSnapshot","set","editedAt","loading","componentDidMount","on","snapshot","announcementObject","val","announcementList","Object","keys","map","key","componentWillUnmount","off","render","messages","onEditMessage","onRemoveMessage","onCreateMessage","MessageList","MessageItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","Messages","MessagesBase","condition","roles","MODERATOR","ADMIN"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { withFirebase } from \"../Firebase\";\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst ModeratorPage = () => (\n  <div>\n    <h1>Moderator</h1>\n    <p>The Moderator Page is accessible by every signed in moderator user.</p>\n\n    <Announcements />\n  </div>\n);\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateAnnouncement = (event, authUser) => {\n    this.props.firebase.announcements().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n      username: authUser.username\n    });\n\n    this.setState({ text: \"\" });\n\n    event.preventDefault();\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => ({\n          ...announcementObject[key],\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({ announcements: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  onRemoveAnnouncement = uid => {\n    this.props.firebase.announcement(uid).remove();\n  };\n\n  onEditAnnouncement = (announcement, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  render() {\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {loading && <div>Loading ...</div>}\n\n            {messages ? (\n              <MessageList\n                authUser={authUser}\n                messages={messages}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            ) : (\n              <div>There are no messages...</div>\n            )}\n\n            <form onSubmit={event => this.onCreateMessage(event, authUser)}>\n              <input type=\"text\" value={text} onChange={this.onChangeText} />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onRemoveMessage,\n  onEditMessage\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        authUser={authUser}\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>{message.username}</strong> {message.text}\n            {message.editedAt && <span> (Edited) </span>}\n          </span>\n        )}\n        {authUser.uid === message.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <button onClick={this.onSaveEditText}>Save</button>\n                <button onClick={this.onToggleEditMode}>Reset</button>\n              </span>\n            ) : (\n              <button onClick={this.onToggleEditMode}>Edit</button>\n            )}\n\n            {!editMode && (\n              <button\n                type=\"button\"\n                onClick={() => onRemoveMessage(message.uid)}\n              >\n                Delete\n              </button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\n\nconst Messages = withFirebase(MessagesBase);\n\nconst condition = authUser =>\n  authUser &&\n  (!!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.ADMIN]);\n\nexport default compose(\n  withAuthorization(condition),\n  withFirebase\n)(ModeratorPage);\n"]},"metadata":{},"sourceType":"module"}