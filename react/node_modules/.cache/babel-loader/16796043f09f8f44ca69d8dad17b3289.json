{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/React/firebase-tutorial/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kyle/workspace/React/firebase-tutorial/src/components/Prayer/index.js\";\nimport React from \"react\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\n\nconst PrayerPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Prayer Requests\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"If you need prayer for anything, please submit your request below.\"), React.createElement(PrayerForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  request: \"\",\n  error: null\n};\n\nclass PrayerForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error;\n    const isInvalid = password === \"\" || email === \"\";\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sign In\"), error && React.createElement(\"p\", {\n      class: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst condition = authUser => !!authUser; //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(PrayerPage);","map":{"version":3,"sources":["/Users/kyle/workspace/React/firebase-tutorial/src/components/Prayer/index.js"],"names":["React","compose","withAuthorization","PrayerPage","INITIAL_STATE","request","error","PrayerForm","Component","constructor","props","onSubmit","event","state","email","password","firebase","doSignInWithEmailAndPassword","then","setState","history","push","ROUTES","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","condition","authUser"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\n\nconst PrayerPage = () => (\n  <div>\n    <h1>Prayer Requests</h1>\n    <p>If you need prayer for anything, please submit your request below.</p>\n    <PrayerForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  request: \"\",\n  error: null\n};\n\nclass PrayerForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p class=\"text-danger\">{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\n//or equivalently:\n//const condition = authUser => authUser != null;\n\nexport default withAuthorization(condition)(PrayerPage);\n"]},"metadata":{},"sourceType":"module"}