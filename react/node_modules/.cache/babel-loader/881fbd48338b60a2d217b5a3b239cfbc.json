{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\moonl\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\moonl\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\moonl\\\\Documents\\\\GitHub\\\\Berryessa-App\\\\react\\\\src\\\\components\\\\Prayer\\\\reply.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { AuthUserContext, withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst ReplyPage = header => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, header), React.createElement(Replies, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}));\n\nclass ReplyBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onChangeCheckbox = event => {\n      this.setState({\n        [event.target.name]: event.target.checked\n      });\n    };\n\n    this.onCreateReply = (event, authUser) => {\n      this.props.firebase.replies().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        username: authUser.username,\n        isAnonymous: this.state.isAnonymous,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onEditReply = (reply, text) => {\n      const uid = reply.uid,\n            replySnapshot = _objectWithoutProperties(reply, [\"uid\"]);\n\n      this.props.firebase.reply(reply.uid).set(_objectSpread({}, replySnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.onRemoveReply = uid => {\n      this.props.firebase.reply(uid).remove();\n    };\n\n    this.onNextPage = () => {\n      this.setState(state => ({\n        limit: state.limit + 5\n      }), this.onListenForReplies);\n    };\n\n    this.state = {\n      text: \"\",\n      isAnonymous: false,\n      loading: false,\n      replies: [],\n      limit: 5\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForReplies();\n  }\n\n  onListenForReplies() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.replies().orderByChild(\"createdAt\").limitToLast(this.state.limit).on(\"value\", snapshot => {\n      const replyObject = snapshot.val();\n\n      if (replyObject) {\n        const replyList = Object.keys(replyObject).map(key => _objectSpread({}, replyObject[key], {\n          uid: key\n        })); // convert replies list from snapshot\n\n        this.setState({\n          replies: replyList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          replies: null,\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.replies().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          isAnonymous = _this$state.isAnonymous,\n          replies = _this$state.replies,\n          loading = _this$state.loading;\n    const isInvalid = text === \"\";\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, !loading && replies && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"More\"), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Loading ...\"), replies ? React.createElement(ReplyList, {\n      authUser: authUser,\n      replies: replies,\n      onEditReply: this.onEditReply,\n      onRemoveReply: this.onRemoveReply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"There are no reply requests ...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateReply(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"reply\",\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      placeholder: \"Send a prayer request...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst ReplyList = ({\n  authUser,\n  replies,\n  onEditReply,\n  onRemoveReply\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, replies.map(reply => (authUser.uid === reply.userId || !!authUser.roles[ROLES.ADMIN] || !!authUser.roles[ROLES.MODERATOR]) && React.createElement(ReplyItem, {\n  authUser: authUser,\n  key: reply.uid,\n  reply: reply,\n  onEditReply: onEditReply,\n  onRemoveReply: onRemoveReply,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n})));\n\nclass ReplyItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.reply.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditReply(this.props.reply, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.reply.text\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          reply = _this$props.reply,\n          onRemoveReply = _this$props.onRemoveReply;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editText = _this$state2.editText;\n    const isInvalid = editText === \"\";\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, reply.isAnonymous ? \"Anonymous\" : reply.username), \" \", reply.text, console.log(reply), reply.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"(Edited)\")), authUser.uid === reply.userId && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: isInvalid,\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveReply(reply.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst Replies = withFirebase(ReplyBase);\n\nconst condition = authUser => !!authUser && (!!authUser.roles[ROLES.ADMIN] || !!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.APPROVED]); //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(ReplyPage);","map":{"version":3,"sources":["C:\\Users\\moonl\\Documents\\GitHub\\Berryessa-App\\react\\src\\components\\Prayer\\reply.js"],"names":["React","Component","AuthUserContext","withAuthorization","withFirebase","ROLES","ReplyPage","header","ReplyBase","constructor","props","onChangeText","event","setState","text","target","value","onChangeCheckbox","name","checked","onCreateReply","authUser","firebase","replies","push","state","userId","uid","username","isAnonymous","createdAt","serverValue","TIMESTAMP","preventDefault","onEditReply","reply","replySnapshot","set","editedAt","onRemoveReply","remove","onNextPage","limit","onListenForReplies","loading","componentDidMount","orderByChild","limitToLast","on","snapshot","replyObject","val","replyList","Object","keys","map","key","componentWillUnmount","off","render","isInvalid","ReplyList","roles","ADMIN","MODERATOR","ReplyItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","console","log","Replies","condition","APPROVED"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;;AAEA,MAAMC,SAAS,GAAGC,MAAM,IACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,MAAL,CADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAOA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+CnBC,YA/CmB,GA+CJC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;AACD,KAjDkB;;AAAA,SAmDnBC,gBAnDmB,GAmDAL,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACG,MAAN,CAAaG,IAAd,GAAqBN,KAAK,CAACG,MAAN,CAAaI;AAApC,OAAd;AACD,KArDkB;;AAAA,SAuDnBC,aAvDmB,GAuDH,CAACR,KAAD,EAAQS,QAAR,KAAqB;AACnC,WAAKX,KAAL,CAAWY,QAAX,CAAoBC,OAApB,GAA8BC,IAA9B,CAAmC;AACjCV,QAAAA,IAAI,EAAE,KAAKW,KAAL,CAAWX,IADgB;AAEjCY,QAAAA,MAAM,EAAEL,QAAQ,CAACM,GAFgB;AAGjCC,QAAAA,QAAQ,EAAEP,QAAQ,CAACO,QAHc;AAIjCC,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI,WAJS;AAKjCC,QAAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWY,QAAX,CAAoBS,WAApB,CAAgCC;AALV,OAAnC;AAQA,WAAKnB,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AAEAF,MAAAA,KAAK,CAACqB,cAAN;AACD,KAnEkB;;AAAA,SAqEnBC,WArEmB,GAqEL,CAACC,KAAD,EAAQrB,IAAR,KAAiB;AAAA,YACrBa,GADqB,GACKQ,KADL,CACrBR,GADqB;AAAA,YACbS,aADa,4BACKD,KADL;;AAG7B,WAAKzB,KAAL,CAAWY,QAAX,CAAoBa,KAApB,CAA0BA,KAAK,CAACR,GAAhC,EAAqCU,GAArC,mBACKD,aADL;AAEEtB,QAAAA,IAFF;AAGEwB,QAAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWY,QAAX,CAAoBS,WAApB,CAAgCC;AAH5C;AAKD,KA7EkB;;AAAA,SA+EnBO,aA/EmB,GA+EHZ,GAAG,IAAI;AACrB,WAAKjB,KAAL,CAAWY,QAAX,CAAoBa,KAApB,CAA0BR,GAA1B,EAA+Ba,MAA/B;AACD,KAjFkB;;AAAA,SAmFnBC,UAnFmB,GAmFN,MAAM;AACjB,WAAK5B,QAAL,CACEY,KAAK,KAAK;AAAEiB,QAAAA,KAAK,EAAEjB,KAAK,CAACiB,KAAN,GAAc;AAAvB,OAAL,CADP,EAEE,KAAKC,kBAFP;AAID,KAxFkB;;AAGjB,SAAKlB,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,EADK;AAEXe,MAAAA,WAAW,EAAE,KAFF;AAGXe,MAAAA,OAAO,EAAE,KAHE;AAIXrB,MAAAA,OAAO,EAAE,EAJE;AAKXmB,MAAAA,KAAK,EAAE;AALI,KAAb;AAOD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,kBAAL;AACD;;AAEDA,EAAAA,kBAAkB,GAAG;AACnB,SAAK9B,QAAL,CAAc;AAAE+B,MAAAA,OAAO,EAAE;AAAX,KAAd;AAEA,SAAKlC,KAAL,CAAWY,QAAX,CACGC,OADH,GAEGuB,YAFH,CAEgB,WAFhB,EAGGC,WAHH,CAGe,KAAKtB,KAAL,CAAWiB,KAH1B,EAIGM,EAJH,CAIM,OAJN,EAIeC,QAAQ,IAAI;AACvB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,GAAT,EAApB;;AAEA,UAAID,WAAJ,EAAiB;AACf,cAAME,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,GAAzB,CAA6BC,GAAG,sBAC7CN,WAAW,CAACM,GAAD,CADkC;AAEhD7B,UAAAA,GAAG,EAAE6B;AAF2C,UAAhC,CAAlB,CADe,CAKf;;AAEA,aAAK3C,QAAL,CAAc;AACZU,UAAAA,OAAO,EAAE6B,SADG;AAEZR,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAXD,MAWO;AACL,aAAK/B,QAAL,CAAc;AAAEU,UAAAA,OAAO,EAAE,IAAX;AAAiBqB,UAAAA,OAAO,EAAE;AAA1B,SAAd;AACD;AACF,KArBH;AAsBD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrB,SAAK/C,KAAL,CAAWY,QAAX,CAAoBC,OAApB,GAA8BmC,GAA9B;AACD;;AA6CDC,EAAAA,MAAM,GAAG;AAAA,wBACyC,KAAKlC,KAD9C;AAAA,UACCX,IADD,eACCA,IADD;AAAA,UACOe,WADP,eACOA,WADP;AAAA,UACoBN,OADpB,eACoBA,OADpB;AAAA,UAC6BqB,OAD7B,eAC6BA,OAD7B;AAGP,UAAMgB,SAAS,GAAG9C,IAAI,KAAK,EAA3B;AAEA,WACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,QAAQ,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACuB,OAAD,IACCrB,OADD,IAEG;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKkB,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN,EAQGG,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARd,EAUGrB,OAAO,GACN,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAEF,QADZ;AAEE,MAAA,OAAO,EAAEE,OAFX;AAGE,MAAA,WAAW,EAAE,KAAKW,WAHpB;AAIE,MAAA,aAAa,EAAE,KAAKK,aAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,GAQN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAlBJ,EAqBE;AAAM,MAAA,QAAQ,EAAE3B,KAAK,IAAI,KAAKQ,aAAL,CAAmBR,KAAnB,EAA0BS,QAA1B,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEP,IAHT;AAIE,MAAA,QAAQ,EAAE,KAAKH,YAJjB;AAKE,MAAA,WAAW,EAAC,0BALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAQ,MAAA,QAAQ,EAAEiD,SAAlB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CArBF,CAFJ,CADF;AAwCD;;AAxI+B;;AA2IlC,MAAMC,SAAS,GAAG,CAAC;AAAExC,EAAAA,QAAF;AAAYE,EAAAA,OAAZ;AAAqBW,EAAAA,WAArB;AAAkCK,EAAAA;AAAlC,CAAD,KAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGhB,OAAO,CAACgC,GAAR,CACCpB,KAAK,IACH,CAACd,QAAQ,CAACM,GAAT,KAAiBQ,KAAK,CAACT,MAAvB,IACC,CAAC,CAACL,QAAQ,CAACyC,KAAT,CAAezD,KAAK,CAAC0D,KAArB,CADH,IAEC,CAAC,CAAC1C,QAAQ,CAACyC,KAAT,CAAezD,KAAK,CAAC2D,SAArB,CAFJ,KAGE,oBAAC,SAAD;AACE,EAAA,QAAQ,EAAE3C,QADZ;AAEE,EAAA,GAAG,EAAEc,KAAK,CAACR,GAFb;AAGE,EAAA,KAAK,EAAEQ,KAHT;AAIE,EAAA,WAAW,EAAED,WAJf;AAKE,EAAA,aAAa,EAAEK,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALL,CADH,CADF;;AAmBA,MAAM0B,SAAN,SAAwBhE,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBwD,gBATmB,GASA,MAAM;AACvB,WAAKrD,QAAL,CAAcY,KAAK,KAAK;AACtB0C,QAAAA,QAAQ,EAAE,CAAC1C,KAAK,CAAC0C,QADK;AAEtBC,QAAAA,QAAQ,EAAE,KAAK1D,KAAL,CAAWyB,KAAX,CAAiBrB;AAFL,OAAL,CAAnB;AAID,KAdkB;;AAAA,SAgBnBuD,gBAhBmB,GAgBAzD,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAEuD,QAAAA,QAAQ,EAAExD,KAAK,CAACG,MAAN,CAAaC;AAAzB,OAAd;AACD,KAlBkB;;AAAA,SAoBnBsD,cApBmB,GAoBF,MAAM;AACrB,WAAK5D,KAAL,CAAWwB,WAAX,CAAuB,KAAKxB,KAAL,CAAWyB,KAAlC,EAAyC,KAAKV,KAAL,CAAW2C,QAApD;AAEA,WAAKvD,QAAL,CAAc;AAAEsD,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAxBkB;;AAGjB,SAAK1C,KAAL,GAAa;AACX0C,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE,KAAK1D,KAAL,CAAWyB,KAAX,CAAiBrB;AAFhB,KAAb;AAID;;AAmBD6C,EAAAA,MAAM,GAAG;AAAA,wBACoC,KAAKjD,KADzC;AAAA,UACCW,QADD,eACCA,QADD;AAAA,UACWc,KADX,eACWA,KADX;AAAA,UACkBI,aADlB,eACkBA,aADlB;AAAA,yBAEwB,KAAKd,KAF7B;AAAA,UAEC0C,QAFD,gBAECA,QAFD;AAAA,UAEWC,QAFX,gBAEWA,QAFX;AAIP,UAAMR,SAAS,GAAGQ,QAAQ,KAAK,EAA/B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,GACP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEC,QAFT;AAGE,MAAA,QAAQ,EAAE,KAAKC,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,GAOP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASlC,KAAK,CAACN,WAAN,GAAoB,WAApB,GAAkCM,KAAK,CAACP,QAAjD,CADF,EACsE,GADtE,EAEGO,KAAK,CAACrB,IAFT,EAGGyD,OAAO,CAACC,GAAR,CAAYrC,KAAZ,CAHH,EAIGA,KAAK,CAACG,QAAN,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJrB,CARJ,EAeGjB,QAAQ,CAACM,GAAT,KAAiBQ,KAAK,CAACT,MAAvB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyC,QAAQ,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,EAAEP,SAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKU,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKJ,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADO,GAQP;AAAQ,MAAA,OAAO,EAAE,KAAKA,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAWG,CAACC,QAAD,IACC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM5B,aAAa,CAACJ,KAAK,CAACR,GAAP,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,CAhBJ,CADF;AAqCD;;AAtE+B;;AAyElC,MAAM8C,OAAO,GAAGrE,YAAY,CAACI,SAAD,CAA5B;;AAEA,MAAMkE,SAAS,GAAGrD,QAAQ,IACxB,CAAC,CAACA,QAAF,KACC,CAAC,CAACA,QAAQ,CAACyC,KAAT,CAAezD,KAAK,CAAC0D,KAArB,CAAF,IACC,CAAC,CAAC1C,QAAQ,CAACyC,KAAT,CAAezD,KAAK,CAAC2D,SAArB,CADH,IAEC,CAAC,CAAC3C,QAAQ,CAACyC,KAAT,CAAezD,KAAK,CAACsE,QAArB,CAHJ,CADF,C,CAMA;AACA;;;AAEA,eAAexE,iBAAiB,CAACuE,SAAD,CAAjB,CAA6BpE,SAA7B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst ReplyPage = header => (\r\n  <div>\r\n    <h1>{header}</h1>\r\n    <Replies />\r\n  </div>\r\n);\r\n\r\nclass ReplyBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: \"\",\r\n      isAnonymous: false,\r\n      loading: false,\r\n      replies: [],\r\n      limit: 5\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onListenForReplies();\r\n  }\r\n\r\n  onListenForReplies() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .replies()\r\n      .orderByChild(\"createdAt\")\r\n      .limitToLast(this.state.limit)\r\n      .on(\"value\", snapshot => {\r\n        const replyObject = snapshot.val();\r\n\r\n        if (replyObject) {\r\n          const replyList = Object.keys(replyObject).map(key => ({\r\n            ...replyObject[key],\r\n            uid: key\r\n          }));\r\n          // convert replies list from snapshot\r\n\r\n          this.setState({\r\n            replies: replyList,\r\n            loading: false\r\n          });\r\n        } else {\r\n          this.setState({ replies: null, loading: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.replies().off();\r\n  }\r\n\r\n  onChangeText = event => {\r\n    this.setState({ text: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  onCreateReply = (event, authUser) => {\r\n    this.props.firebase.replies().push({\r\n      text: this.state.text,\r\n      userId: authUser.uid,\r\n      username: authUser.username,\r\n      isAnonymous: this.state.isAnonymous,\r\n      createdAt: this.props.firebase.serverValue.TIMESTAMP\r\n    });\r\n\r\n    this.setState({ text: \"\" });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onEditReply = (reply, text) => {\r\n    const { uid, ...replySnapshot } = reply;\r\n\r\n    this.props.firebase.reply(reply.uid).set({\r\n      ...replySnapshot,\r\n      text,\r\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\r\n    });\r\n  };\r\n\r\n  onRemoveReply = uid => {\r\n    this.props.firebase.reply(uid).remove();\r\n  };\r\n\r\n  onNextPage = () => {\r\n    this.setState(\r\n      state => ({ limit: state.limit + 5 }),\r\n      this.onListenForReplies\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { text, isAnonymous, replies, loading } = this.state;\r\n\r\n    const isInvalid = text === \"\";\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            {!loading &&\r\n              replies && (\r\n                <button type=\"button\" onClick={this.onNextPage}>\r\n                  More\r\n                </button>\r\n              )}\r\n\r\n            {loading && <div>Loading ...</div>}\r\n\r\n            {replies ? (\r\n              <ReplyList\r\n                authUser={authUser}\r\n                replies={replies}\r\n                onEditReply={this.onEditReply}\r\n                onRemoveReply={this.onRemoveReply}\r\n              />\r\n            ) : (\r\n              <div>There are no reply requests ...</div>\r\n            )}\r\n\r\n            <form onSubmit={event => this.onCreateReply(event, authUser)}>\r\n              <input\r\n                name=\"reply\"\r\n                type=\"text\"\r\n                value={text}\r\n                onChange={this.onChangeText}\r\n                placeholder=\"Send a prayer request...\"\r\n              />\r\n              <button disabled={isInvalid} type=\"submit\">\r\n                Send\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst ReplyList = ({ authUser, replies, onEditReply, onRemoveReply }) => (\r\n  <ul>\r\n    {replies.map(\r\n      reply =>\r\n        (authUser.uid === reply.userId ||\r\n          !!authUser.roles[ROLES.ADMIN] ||\r\n          !!authUser.roles[ROLES.MODERATOR]) && (\r\n          <ReplyItem\r\n            authUser={authUser}\r\n            key={reply.uid}\r\n            reply={reply}\r\n            onEditReply={onEditReply}\r\n            onRemoveReply={onRemoveReply}\r\n          />\r\n        )\r\n    )}\r\n  </ul>\r\n);\r\n\r\nclass ReplyItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editMode: false,\r\n      editText: this.props.reply.text\r\n    };\r\n  }\r\n\r\n  onToggleEditMode = () => {\r\n    this.setState(state => ({\r\n      editMode: !state.editMode,\r\n      editText: this.props.reply.text\r\n    }));\r\n  };\r\n\r\n  onChangeEditText = event => {\r\n    this.setState({ editText: event.target.value });\r\n  };\r\n\r\n  onSaveEditText = () => {\r\n    this.props.onEditReply(this.props.reply, this.state.editText);\r\n\r\n    this.setState({ editMode: false });\r\n  };\r\n\r\n  render() {\r\n    const { authUser, reply, onRemoveReply } = this.props;\r\n    const { editMode, editText } = this.state;\r\n\r\n    const isInvalid = editText === \"\";\r\n\r\n    return (\r\n      <li>\r\n        {editMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={editText}\r\n            onChange={this.onChangeEditText}\r\n          />\r\n        ) : (\r\n          <span>\r\n            <strong>{reply.isAnonymous ? \"Anonymous\" : reply.username}</strong>{\" \"}\r\n            {reply.text}\r\n            {console.log(reply)}\r\n            {reply.editedAt && <span>(Edited)</span>}\r\n          </span>\r\n        )}\r\n        {authUser.uid === reply.userId && (\r\n          <span>\r\n            {editMode ? (\r\n              <span>\r\n                <button disabled={isInvalid} onClick={this.onSaveEditText}>\r\n                  Save\r\n                </button>\r\n                <button onClick={this.onToggleEditMode}>Reset</button>\r\n              </span>\r\n            ) : (\r\n              <button onClick={this.onToggleEditMode}>Edit</button>\r\n            )}\r\n            {!editMode && (\r\n              <button type=\"button\" onClick={() => onRemoveReply(reply.uid)}>\r\n                Delete\r\n              </button>\r\n            )}\r\n          </span>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst Replies = withFirebase(ReplyBase);\r\n\r\nconst condition = authUser =>\r\n  !!authUser &&\r\n  (!!authUser.roles[ROLES.ADMIN] ||\r\n    !!authUser.roles[ROLES.MODERATOR] ||\r\n    !!authUser.roles[ROLES.APPROVED]);\r\n\r\n//or equivalently:\r\n//const condition = authUser => authUser != null;\r\n\r\nexport default withAuthorization(condition)(ReplyPage);\r\n"]},"metadata":{},"sourceType":"module"}