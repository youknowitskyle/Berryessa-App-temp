{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Moderator/index.js\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../Firebase\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst ModeratorPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Moderator\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"The Moderator Page is accessible by every signed in moderator user.\"), React.createElement(Announcements, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}));\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateAnnouncement = (event, authUser) => {\n      this.props.firebase.announcements().push({\n        title: this.state.title,\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        username: authUser.username\n      });\n      this.setState({\n        title: \"\",\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveAnnouncement = uid => {\n      this.props.firebase.announcement(uid).remove();\n    };\n\n    this.onEditAnnouncement = (announcement, text) => {\n      const uid = announcement.uid,\n            announcementSnapshot = _objectWithoutProperties(announcement, [\"uid\"]);\n\n      this.props.firebase.announcement(announcement.uid).set(_objectSpread({}, announcementSnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.state = {\n      title: \"\",\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => _objectSpread({}, announcementObject[key], {\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          announcements: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          text = _this$state.text,\n          announcements = _this$state.announcements,\n          loading = _this$state.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Loading ...\"), announcements ? React.createElement(AnnouncementList, {\n      authUser: authUser,\n      announcements: announcements,\n      onEditAnnouncement: this.onEditAnnouncement,\n      onRemoveAnnouncement: this.onRemoveAnnouncement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"There are no announcements...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateAnnouncement(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: title,\n      placeholder: \"Title\",\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      placeholder: \"Body\",\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst AnnouncementList = ({\n  authUser,\n  announcements,\n  onRemoveAnnouncement,\n  onEditAnnouncement\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}, announcements.map(announcement => React.createElement(AnnouncementItem, {\n  authUser: authUser,\n  key: announcement.uid,\n  announcement: announcement,\n  onEditAnnouncement: onEditAnnouncement,\n  onRemoveAnnouncement: onRemoveAnnouncement,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n})));\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.announcement.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditAnnouncement(this.props.announcement, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.announcement.text\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          announcement = _this$props.announcement,\n          onRemoveAnnouncement = _this$props.onRemoveAnnouncement;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editText = _this$state2.editText;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, announcement.username), \" \", announcement.text, announcement.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" (Edited) \")), authUser.uid === announcement.userId && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveAnnouncement(announcement.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser => authUser && (!!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.ADMIN]);\n\nexport default compose(withAuthorization(condition), withFirebase)(ModeratorPage);","map":{"version":3,"sources":["/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Moderator/index.js"],"names":["React","Component","Switch","Route","Link","compose","withFirebase","AuthUserContext","withAuthorization","withEmailVerification","ROLES","ROUTES","ModeratorPage","AnnouncementsBase","constructor","props","onChangeText","event","setState","text","target","value","onCreateAnnouncement","authUser","firebase","announcements","push","title","state","userId","uid","createdAt","serverValue","TIMESTAMP","username","preventDefault","onRemoveAnnouncement","announcement","remove","onEditAnnouncement","announcementSnapshot","set","editedAt","loading","componentDidMount","on","snapshot","announcementObject","val","announcementList","Object","keys","map","key","componentWillUnmount","off","render","AnnouncementList","AnnouncementItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","Announcements","condition","roles","MODERATOR","ADMIN"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { withFirebase } from \"../Firebase\";\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst ModeratorPage = () => (\n  <div>\n    <h1>Moderator</h1>\n    <p>The Moderator Page is accessible by every signed in moderator user.</p>\n\n    <Announcements />\n  </div>\n);\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateAnnouncement = (event, authUser) => {\n    this.props.firebase.announcements().push({\n      title: this.state.title,\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n      username: authUser.username\n    });\n\n    this.setState({ title: \"\", text: \"\" });\n\n    event.preventDefault();\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => ({\n          ...announcementObject[key],\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({ announcements: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  onRemoveAnnouncement = uid => {\n    this.props.firebase.announcement(uid).remove();\n  };\n\n  onEditAnnouncement = (announcement, text) => {\n    const { uid, ...announcementSnapshot } = announcement;\n\n    this.props.firebase.announcement(announcement.uid).set({\n      ...announcementSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  render() {\n    const { title, text, announcements, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {loading && <div>Loading ...</div>}\n\n            {announcements ? (\n              <AnnouncementList\n                authUser={authUser}\n                announcements={announcements}\n                onEditAnnouncement={this.onEditAnnouncement}\n                onRemoveAnnouncement={this.onRemoveAnnouncement}\n              />\n            ) : (\n              <div>There are no announcements...</div>\n            )}\n\n            <form\n              onSubmit={event => this.onCreateAnnouncement(event, authUser)}\n            >\n              <input\n                type=\"text\"\n                value={title}\n                placeholder=\"Title\"\n                onChange={this.onChangeText}\n              />\n              <input\n                type=\"text\"\n                value={text}\n                placeholder=\"Body\"\n                onChange={this.onChangeText}\n              />\n\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst AnnouncementList = ({\n  authUser,\n  announcements,\n  onRemoveAnnouncement,\n  onEditAnnouncement\n}) => (\n  <ul>\n    {announcements.map(announcement => (\n      <AnnouncementItem\n        authUser={authUser}\n        key={announcement.uid}\n        announcement={announcement}\n        onEditAnnouncement={onEditAnnouncement}\n        onRemoveAnnouncement={onRemoveAnnouncement}\n      />\n    ))}\n  </ul>\n);\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.announcement.text\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.announcement.text\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditAnnouncement(this.props.announcement, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, announcement, onRemoveAnnouncement } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>{announcement.username}</strong> {announcement.text}\n            {announcement.editedAt && <span> (Edited) </span>}\n          </span>\n        )}\n        {authUser.uid === announcement.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <button onClick={this.onSaveEditText}>Save</button>\n                <button onClick={this.onToggleEditMode}>Reset</button>\n              </span>\n            ) : (\n              <button onClick={this.onToggleEditMode}>Edit</button>\n            )}\n\n            {!editMode && (\n              <button\n                type=\"button\"\n                onClick={() => onRemoveAnnouncement(announcement.uid)}\n              >\n                Delete\n              </button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\n\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser =>\n  authUser &&\n  (!!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.ADMIN]);\n\nexport default compose(\n  withAuthorization(condition),\n  withFirebase\n)(ModeratorPage);\n"]},"metadata":{},"sourceType":"module"}