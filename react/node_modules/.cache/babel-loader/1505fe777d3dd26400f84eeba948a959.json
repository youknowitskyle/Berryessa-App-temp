{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Moderator/index.js\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport DatePicker from \"react-datepicker\";\nimport { withFirebase } from \"../Firebase\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst ModeratorPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Moderator\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"The Moderator Page is accessible by every signed in moderator user.\"), React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Announcements\"), React.createElement(Announcements, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(Example, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}));\n\nclass Example extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startDate: new Date()\n    };\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onChangeTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.handleDateChange = date => {\n      if (Date.parse(date) > Date.now()) {\n        this.setState({\n          endDate: date\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.onCreateAnnouncement = (event, authUser) => {\n      const dateHolder = Date.parse(this.state.endDate);\n      this.props.firebase.announcements().push({\n        title: this.state.title,\n        text: this.state.text,\n        endDate: dateHolder,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        username: authUser.username\n      });\n      this.setState({\n        title: \"\",\n        text: \"\",\n        endDate: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveAnnouncement = uid => {\n      this.props.firebase.announcement(uid).remove();\n    };\n\n    this.onEditAnnouncement = (announcement, title, text, dateHolder) => {\n      const uid = announcement.uid,\n            announcementSnapshot = _objectWithoutProperties(announcement, [\"uid\"]);\n\n      const endDate = Date.parse(dateHolder);\n      this.props.firebase.announcement(announcement.uid).set(_objectSpread({}, announcementSnapshot, {\n        title,\n        text,\n        endDate,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.state = {\n      title: \"\",\n      text: \"\",\n      endDate: \"\",\n      loading: false,\n      announcement: [],\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => _objectSpread({}, announcementObject[key], {\n          uid: key\n        }));\n        announcementList.forEach(item => {\n          console.log(item.endDate);\n        });\n        const filteredAnnouncements = announcementList.filter(item => {\n          return parseInt(item.endDate) > Date.now();\n        });\n        this.setState({\n          announcements: filteredAnnouncements,\n          loading: false\n        });\n      } else {\n        this.setState({\n          announcements: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          text = _this$state.text,\n          endDate = _this$state.endDate,\n          announcements = _this$state.announcements,\n          loading = _this$state.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Loading ...\"), announcements ? React.createElement(AnnouncementList, {\n      authUser: authUser,\n      announcements: announcements,\n      onEditAnnouncement: this.onEditAnnouncement,\n      onRemoveAnnouncement: this.onRemoveAnnouncement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"There are no announcements...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateAnnouncement(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: title,\n      placeholder: \"Title\",\n      onChange: this.onChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      placeholder: \"Body\",\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      onSelect: this.handleDateChange,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Send\"), this.state.error && React.createElement(\"h2\", {\n      syle: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Please enter a valid date.\"))));\n  }\n\n}\n\nconst AnnouncementList = ({\n  authUser,\n  announcements,\n  onRemoveAnnouncement,\n  onEditAnnouncement\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 202\n  },\n  __self: this\n}, announcements.map(announcement => React.createElement(AnnouncementItem, {\n  authUser: authUser,\n  key: announcement.uid,\n  announcement: announcement,\n  onEditAnnouncement: onEditAnnouncement,\n  onRemoveAnnouncement: onRemoveAnnouncement,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n})));\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editTitle: this.props.announcement.title,\n        editText: this.props.announcement.text,\n        editDate: this.props.announcement.endDate\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onChangeEditTitle = event => {\n      this.setState({\n        editTitle: event.target.value\n      });\n    };\n\n    this.onChangeDate = event => {\n      this.setState({\n        editDate: event\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditAnnouncement(this.props.announcement, this.state.editTitle, this.state.editText, this.state.editDate);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editTitle: this.props.announcement.title,\n      editText: this.props.announcement.text,\n      editDate: this.props.announcement.endDate\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          announcement = _this$props.announcement,\n          onRemoveAnnouncement = _this$props.onRemoveAnnouncement;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editTitle = _this$state2.editTitle,\n          editText = _this$state2.editText;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, editMode ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: editTitle,\n      onChange: this.onChangeEditTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      onSelect: this.onChangeDate,\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, announcement.title), \" \", announcement.text, \" (Posted by\", \" \", announcement.username, \")\", announcement.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \" (Edited) \")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Cancel\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveAnnouncement(announcement.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser => authUser && (!!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.ADMIN]);\n\nexport default compose(withAuthorization(condition), withFirebase)(ModeratorPage);","map":{"version":3,"sources":["/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Moderator/index.js"],"names":["React","Component","Switch","Route","Link","compose","DatePicker","withFirebase","AuthUserContext","withAuthorization","withEmailVerification","ROLES","ROUTES","ModeratorPage","Example","state","startDate","Date","handleChange","date","setState","render","AnnouncementsBase","constructor","props","onChangeText","event","text","target","value","onChangeTitle","title","handleDateChange","parse","now","endDate","error","onCreateAnnouncement","authUser","dateHolder","firebase","announcements","push","userId","uid","createdAt","serverValue","TIMESTAMP","username","preventDefault","onRemoveAnnouncement","announcement","remove","onEditAnnouncement","announcementSnapshot","set","editedAt","loading","componentDidMount","on","snapshot","announcementObject","val","announcementList","Object","keys","map","key","forEach","item","console","log","filteredAnnouncements","filter","parseInt","componentWillUnmount","off","color","AnnouncementList","AnnouncementItem","onToggleEditMode","editMode","editTitle","editText","editDate","onChangeEditText","onChangeEditTitle","onChangeDate","onSaveEditText","Announcements","condition","roles","MODERATOR","ADMIN"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport DatePicker from \"react-datepicker\";\n\nimport { withFirebase } from \"../Firebase\";\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst ModeratorPage = () => (\n  <div>\n    <h1>Moderator</h1>\n    <p>The Moderator Page is accessible by every signed in moderator user.</p>\n\n    <h2>Announcements</h2>\n    <Announcements />\n    <Example />\n  </div>\n);\n\nclass Example extends Component {\n  state = {\n    startDate: new Date()\n  };\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  render() {\n    return (\n      <DatePicker\n        selected={this.state.startDate}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      text: \"\",\n      endDate: \"\",\n      loading: false,\n      announcement: [],\n      error: false\n    };\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onChangeTitle = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDateChange = date => {\n    if (Date.parse(date) > Date.now()) {\n      this.setState({ endDate: date });\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  onCreateAnnouncement = (event, authUser) => {\n    const dateHolder = Date.parse(this.state.endDate);\n\n    this.props.firebase.announcements().push({\n      title: this.state.title,\n      text: this.state.text,\n      endDate: dateHolder,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n      username: authUser.username\n    });\n    this.setState({ title: \"\", text: \"\", endDate: \"\" });\n\n    event.preventDefault();\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => ({\n          ...announcementObject[key],\n          uid: key\n        }));\n        announcementList.forEach(item => {\n          console.log(item.endDate);\n        });\n        const filteredAnnouncements = announcementList.filter(item => {\n          return parseInt(item.endDate) > Date.now();\n        });\n        this.setState({\n          announcements: filteredAnnouncements,\n          loading: false\n        });\n      } else {\n        this.setState({ announcements: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  onRemoveAnnouncement = uid => {\n    this.props.firebase.announcement(uid).remove();\n  };\n\n  onEditAnnouncement = (announcement, title, text, dateHolder) => {\n    const { uid, ...announcementSnapshot } = announcement;\n    const endDate = Date.parse(dateHolder);\n\n    this.props.firebase.announcement(announcement.uid).set({\n      ...announcementSnapshot,\n      title,\n      text,\n      endDate,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  render() {\n    const { title, text, endDate, announcements, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {loading && <div>Loading ...</div>}\n\n            {announcements ? (\n              <AnnouncementList\n                authUser={authUser}\n                announcements={announcements}\n                onEditAnnouncement={this.onEditAnnouncement}\n                onRemoveAnnouncement={this.onRemoveAnnouncement}\n              />\n            ) : (\n              <div>There are no announcements...</div>\n            )}\n\n            <form\n              onSubmit={event => this.onCreateAnnouncement(event, authUser)}\n            >\n              <input\n                type=\"text\"\n                value={title}\n                placeholder=\"Title\"\n                onChange={this.onChangeTitle}\n              />\n              <input\n                type=\"text\"\n                value={text}\n                placeholder=\"Body\"\n                onChange={this.onChangeText}\n              />\n              <DatePicker\n                selected={this.state.endDate}\n                onSelect={this.handleDateChange}\n                onChange={this.handleDateChange}\n              />\n              <button type=\"submit\">Send</button>\n              {this.state.error && (\n                <h2 syle={{ color: \"red\" }}>Please enter a valid date.</h2>\n              )}\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst AnnouncementList = ({\n  authUser,\n  announcements,\n  onRemoveAnnouncement,\n  onEditAnnouncement\n}) => (\n  <ul>\n    {announcements.map(announcement => (\n      <AnnouncementItem\n        authUser={authUser}\n        key={announcement.uid}\n        announcement={announcement}\n        onEditAnnouncement={onEditAnnouncement}\n        onRemoveAnnouncement={onRemoveAnnouncement}\n      />\n    ))}\n  </ul>\n);\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editTitle: this.props.announcement.title,\n      editText: this.props.announcement.text,\n      editDate: this.props.announcement.endDate\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editTitle: this.props.announcement.title,\n      editText: this.props.announcement.text,\n      editDate: this.props.announcement.endDate\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onChangeEditTitle = event => {\n    this.setState({ editTitle: event.target.value });\n  };\n\n  onChangeDate = event => {\n    this.setState({ editDate: event });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditAnnouncement(\n      this.props.announcement,\n      this.state.editTitle,\n      this.state.editText,\n      this.state.editDate\n    );\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, announcement, onRemoveAnnouncement } = this.props;\n    const { editMode, editTitle, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <React.Fragment>\n            <input\n              type=\"text\"\n              value={editTitle}\n              onChange={this.onChangeEditTitle}\n            />\n            <input\n              type=\"text\"\n              value={editText}\n              onChange={this.onChangeEditText}\n            />\n            <DatePicker\n              selected={this.state.endDate}\n              onSelect={this.onChangeDate}\n              onChange={this.onChangeDate}\n            />\n          </React.Fragment>\n        ) : (\n          <span>\n            <strong>{announcement.title}</strong> {announcement.text} (Posted by{\" \"}\n            {announcement.username})\n            {announcement.editedAt && <span> (Edited) </span>}\n          </span>\n        )}\n        <span>\n          {editMode ? (\n            <span>\n              <button onClick={this.onSaveEditText}>Save</button>\n              <button onClick={this.onToggleEditMode}>Cancel</button>\n            </span>\n          ) : (\n            <button onClick={this.onToggleEditMode}>Edit</button>\n          )}\n\n          {!editMode && (\n            <button\n              type=\"button\"\n              onClick={() => onRemoveAnnouncement(announcement.uid)}\n            >\n              Delete\n            </button>\n          )}\n        </span>\n      </li>\n    );\n  }\n}\n\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser =>\n  authUser &&\n  (!!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.ADMIN]);\n\nexport default compose(\n  withAuthorization(condition),\n  withFirebase\n)(ModeratorPage);\n"]},"metadata":{},"sourceType":"module"}