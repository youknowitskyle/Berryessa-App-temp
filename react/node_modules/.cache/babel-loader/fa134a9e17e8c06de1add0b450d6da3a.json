{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\moonl\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\moonl\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\moonl\\\\Documents\\\\GitHub\\\\Berryessa-App\\\\react\\\\src\\\\components\\\\Home\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\n\nconst HomePage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Home Page\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"You are authenticated.\"), React.createElement(Messages, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}));\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateMessage = (event, authUser) => {\n      this.props.firebase.messages().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        username: authUser.username\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveMessage = uid => {\n      this.props.firebase.message(uid).remove();\n    };\n\n    this.onEditMessage = (message, text) => {\n      const uid = message.uid,\n            messageSnapshot = _objectWithoutProperties(message, [\"uid\"]);\n\n      this.props.firebase.message(message.uid).set(_objectSpread({}, messageSnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      message: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.messages().on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => _objectSpread({}, messageObject[key], {\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          messages: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Loading ...\"), messages ? React.createElement(MessageList, {\n      authUser: authUser,\n      messages: messages,\n      onEditMessage: this.onEditMessage,\n      onRemoveMessage: this.onRemoveMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"There are no messages...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateMessage(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onRemoveMessage,\n  onEditMessage\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, messages.map(message => React.createElement(MessageItem, {\n  authUser: authUser,\n  key: message.uid,\n  message: message,\n  onEditMessage: onEditMessage,\n  onRemoveMessage: onRemoveMessage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}))); // const MessageItem = ({ message, onRemoveMessage }) => (\n//   <li>\n//     <strong>{message.username}</strong> {message.text}\n//     <button type=\"button\" onClick={() => onRemoveMessage(message.uid)}>\n//       Delete\n//     </button>\n//   </li>\n// );\n\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.message.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditMessage(this.props.message, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          message = _this$props.message,\n          onRemoveMessage = _this$props.onRemoveMessage;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editText = _this$state2.editText;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, message.username), \" \", message.text, message.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \" (Edited) \")), authUser.uid === message.userId && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveMessage(message.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst Messages = withFirebase(MessagesBase);\n\nconst condition = authUser => !!authUser; //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(HomePage);","map":{"version":3,"sources":["C:\\Users\\moonl\\Documents\\GitHub\\Berryessa-App\\react\\src\\components\\Home\\index.js"],"names":["React","Component","compose","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","tsImportEqualsDeclaration","HomePage","MessagesBase","constructor","props","onChangeText","event","setState","text","target","value","onCreateMessage","authUser","firebase","messages","push","state","userId","uid","createdAt","serverValue","TIMESTAMP","username","preventDefault","onRemoveMessage","message","remove","onEditMessage","messageSnapshot","set","editedAt","loading","componentDidMount","on","snapshot","messageObject","val","messageList","Object","keys","map","key","componentWillUnmount","off","render","MessageList","MessageItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","Messages","condition"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification\r\n} from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <p>You are authenticated.</p>\r\n\r\n    <Messages />\r\n  </div>\r\n);\r\n\r\nclass MessagesBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: \"\",\r\n      loading: false,\r\n      message: []\r\n    };\r\n  }\r\n\r\n  onChangeText = event => {\r\n    this.setState({ text: event.target.value });\r\n  };\r\n\r\n  onCreateMessage = (event, authUser) => {\r\n    this.props.firebase.messages().push({\r\n      text: this.state.text,\r\n      userId: authUser.uid,\r\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n      username: authUser.username\r\n    });\r\n\r\n    this.setState({ text: \"\" });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.messages().on(\"value\", snapshot => {\r\n      const messageObject = snapshot.val();\r\n\r\n      if (messageObject) {\r\n        const messageList = Object.keys(messageObject).map(key => ({\r\n          ...messageObject[key],\r\n          uid: key\r\n        }));\r\n        this.setState({\r\n          messages: messageList,\r\n          loading: false\r\n        });\r\n      } else {\r\n        this.setState({ messages: null, loading: false });\r\n      }\r\n\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.messages().off();\r\n  }\r\n\r\n  onRemoveMessage = uid => {\r\n    this.props.firebase.message(uid).remove();\r\n  };\r\n\r\n  onEditMessage = (message, text) => {\r\n    const { uid, ...messageSnapshot } = message;\r\n\r\n    this.props.firebase.message(message.uid).set({\r\n      ...messageSnapshot,\r\n      text,\r\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { text, messages, loading } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            {loading && <div>Loading ...</div>}\r\n\r\n            {messages ? (\r\n              <MessageList\r\n                authUser={authUser}\r\n                messages={messages}\r\n                onEditMessage={this.onEditMessage}\r\n                onRemoveMessage={this.onRemoveMessage}\r\n              />\r\n            ) : (\r\n              <div>There are no messages...</div>\r\n            )}\r\n\r\n            <form onSubmit={event => this.onCreateMessage(event, authUser)}>\r\n              <input type=\"text\" value={text} onChange={this.onChangeText} />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst MessageList = ({\r\n  authUser,\r\n  messages,\r\n  onRemoveMessage,\r\n  onEditMessage\r\n}) => (\r\n  <ul>\r\n    {messages.map(message => (\r\n      <MessageItem\r\n        authUser={authUser}\r\n        key={message.uid}\r\n        message={message}\r\n        onEditMessage={onEditMessage}\r\n        onRemoveMessage={onRemoveMessage}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n// const MessageItem = ({ message, onRemoveMessage }) => (\r\n//   <li>\r\n//     <strong>{message.username}</strong> {message.text}\r\n//     <button type=\"button\" onClick={() => onRemoveMessage(message.uid)}>\r\n//       Delete\r\n//     </button>\r\n//   </li>\r\n// );\r\n\r\nclass MessageItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editMode: false,\r\n      editText: this.props.message.text\r\n    };\r\n  }\r\n\r\n  onToggleEditMode = () => {\r\n    this.setState(state => ({\r\n      editMode: !state.editMode,\r\n      editText: this.props.message.text\r\n    }));\r\n  };\r\n\r\n  onChangeEditText = event => {\r\n    this.setState({ editText: event.target.value });\r\n  };\r\n\r\n  onSaveEditText = () => {\r\n    this.props.onEditMessage(this.props.message, this.state.editText);\r\n\r\n    this.setState({ editMode: false });\r\n  };\r\n\r\n  render() {\r\n    const { authUser, message, onRemoveMessage } = this.props;\r\n    const { editMode, editText } = this.state;\r\n\r\n    return (\r\n      <li>\r\n        {editMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={editText}\r\n            onChange={this.onChangeEditText}\r\n          />\r\n        ) : (\r\n          <span>\r\n            <strong>{message.username}</strong> {message.text}\r\n            {message.editedAt && <span> (Edited) </span>}\r\n          </span>\r\n        )}\r\n        {authUser.uid === message.userId && (\r\n          <span>\r\n            {editMode ? (\r\n              <span>\r\n                <button onClick={this.onSaveEditText}>Save</button>\r\n                <button onClick={this.onToggleEditMode}>Reset</button>\r\n              </span>\r\n            ) : (\r\n              <button onClick={this.onToggleEditMode}>Edit</button>\r\n            )}\r\n\r\n            {!editMode && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onRemoveMessage(message.uid)}\r\n              >\r\n                Delete\r\n              </button>\r\n            )}\r\n          </span>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst Messages = withFirebase(MessagesBase);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\n//or equivalently:\r\n//const condition = authUser => authUser != null;\r\n\r\nexport default withAuthorization(condition)(HomePage);\r\n"]},"metadata":{},"sourceType":"module"}