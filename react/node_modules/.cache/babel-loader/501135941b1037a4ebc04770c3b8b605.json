{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moonl\\\\Documents\\\\GitHub\\\\Berryessa-App\\\\react\\\\src\\\\components\\\\Account\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../Firebase\";\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\nimport { withAuthorization, AuthUserContext } from \"../Session\";\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\nconst SIGN_IN_METHODS = [{\n  id: \"password\",\n  provider: null\n}, {\n  id: \"google.com\",\n  provider: \"googleProvider\"\n}];\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSignInMethods = () => {\n      this.props.firebase.auth.fetchSignInMethodsForEmail(this.props.authUser.email).then(activeSignInMethods => this.setState({\n        activeSignInMethods,\n        error: null\n      })).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onSocialLoginLink = provider => {\n      this.props.firebase.auth.currentUser.linkWithPopup(this.props.firebase[provider]).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onUnlink = providerId => {\n      this.props.firebase.auth.currentUser.unlink(providerId).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onDefaultLoginLink = password => {\n      const credential = this.props.firebase.emailAuthProvider.credential(this.props.authUser.email, password);\n      this.props.firebase.auth.currentUser.linkAndRetrieveDataWithCredential(credential).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  render() {\n    const _this$state = this.state,\n          activeSignInMethods = _this$state.activeSignInMethods,\n          error = _this$state.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Sign In Methods:\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, SIGN_IN_METHODS.map(signInMethod => {\n      const onlyOneLeft = activeSignInMethods.length === 1;\n      const isEnabled = activeSignInMethods.includes(signInMethod.id);\n      return React.createElement(\"li\", {\n        key: signInMethod.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, signInMethod.id === \"password\" ? React.createElement(DefaultLoginToggle, {\n        onlyOneLeft: onlyOneLeft,\n        isEnabled: isEnabled,\n        signInMethod: signInMethod,\n        onLink: this.onDefaultLoginLink,\n        onUnlink: this.onUnlink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }) : React.createElement(SocialLoginToggle, {\n        onlyOneLeft: onlyOneLeft,\n        isEnabled: isEnabled,\n        signInMethod: signInMethod,\n        onLink: this.onSocialLoginLink,\n        onUnlink: this.onUnlink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    })), error && error.message);\n  }\n\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink\n}) => isEnabled ? React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onUnlink(signInMethod.id),\n  disabled: onlyOneLeft,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, \"Deactivate \", signInMethod.id) : React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onLink(signInMethod.provider),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}, \"Link \", signInMethod.id);\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onLink(this.state.passwordOne);\n      this.setState({\n        passwordOne: \"\",\n        passwordTwo: \"\"\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      passwordOne: \"\",\n      passwordTwo: \"\"\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onlyOneLeft = _this$props.onlyOneLeft,\n          isEnabled = _this$props.isEnabled,\n          signInMethod = _this$props.signInMethod,\n          onUnlink = _this$props.onUnlink;\n    const _this$state2 = this.state,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n    return isEnabled ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onUnlink(signInMethod.id),\n      disabled: onlyOneLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Deactivate \", signInMethod.id) : React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Link \", signInMethod.id));\n  }\n\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst AccountPage = () => React.createElement(AuthUserContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 192\n  },\n  __self: this\n}, authUser => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 194\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}, \"Account: \", authUser.email), React.createElement(PasswordChangeForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 197\n  },\n  __self: this\n}), React.createElement(LoginManagement, {\n  authUser: authUser,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 198\n  },\n  __self: this\n})));\n\nconst condition = authUser => authUser != null;\n\nexport default withAuthorization(condition)(AccountPage);","map":{"version":3,"sources":["C:\\Users\\moonl\\Documents\\GitHub\\Berryessa-App\\react\\src\\components\\Account\\index.js"],"names":["React","Component","compose","withFirebase","PasswordForgetForm","PasswordChangeForm","withAuthorization","AuthUserContext","tsImportEqualsDeclaration","SIGN_IN_METHODS","id","provider","LoginManagementBase","constructor","props","fetchSignInMethods","firebase","auth","fetchSignInMethodsForEmail","authUser","email","then","activeSignInMethods","setState","error","catch","onSocialLoginLink","currentUser","linkWithPopup","onUnlink","providerId","unlink","onDefaultLoginLink","password","credential","emailAuthProvider","linkAndRetrieveDataWithCredential","state","componentDidMount","render","map","signInMethod","onlyOneLeft","length","isEnabled","includes","message","SocialLoginToggle","onLink","DefaultLoginToggle","onSubmit","event","preventDefault","passwordOne","passwordTwo","onChange","target","name","value","isInvalid","LoginManagement","AccountPage","condition"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport { withAuthorization, AuthUserContext } from \"../Session\";\r\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\r\n\r\nconst SIGN_IN_METHODS = [\r\n  {\r\n    id: \"password\",\r\n    provider: null\r\n  },\r\n  {\r\n    id: \"google.com\",\r\n    provider: \"googleProvider\"\r\n  }\r\n];\r\n\r\nclass LoginManagementBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSignInMethods: [],\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSignInMethods();\r\n  }\r\n\r\n  fetchSignInMethods = () => {\r\n    this.props.firebase.auth\r\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\r\n      .then(activeSignInMethods =>\r\n        this.setState({ activeSignInMethods, error: null })\r\n      )\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onSocialLoginLink = provider => {\r\n    this.props.firebase.auth.currentUser\r\n      .linkWithPopup(this.props.firebase[provider])\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onUnlink = providerId => {\r\n    this.props.firebase.auth.currentUser\r\n      .unlink(providerId)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onDefaultLoginLink = password => {\r\n    const credential = this.props.firebase.emailAuthProvider.credential(\r\n      this.props.authUser.email,\r\n      password\r\n    );\r\n\r\n    this.props.firebase.auth.currentUser\r\n      .linkAndRetrieveDataWithCredential(credential)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  render() {\r\n    const { activeSignInMethods, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        Sign In Methods:\r\n        <ul>\r\n          {SIGN_IN_METHODS.map(signInMethod => {\r\n            const onlyOneLeft = activeSignInMethods.length === 1;\r\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\r\n\r\n            return (\r\n              <li key={signInMethod.id}>\r\n                {signInMethod.id === \"password\" ? (\r\n                  <DefaultLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onDefaultLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                ) : (\r\n                  <SocialLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onSocialLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        {error && error.message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SocialLoginToggle = ({\r\n  onlyOneLeft,\r\n  isEnabled,\r\n  signInMethod,\r\n  onLink,\r\n  onUnlink\r\n}) =>\r\n  isEnabled ? (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onUnlink(signInMethod.id)}\r\n      disabled={onlyOneLeft}\r\n    >\r\n      Deactivate {signInMethod.id}\r\n    </button>\r\n  ) : (\r\n    <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\r\n      Link {signInMethod.id}\r\n    </button>\r\n  );\r\n\r\nclass DefaultLoginToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { passwordOne: \"\", passwordTwo: \"\" };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onLink(this.state.passwordOne);\r\n    this.setState({ passwordOne: \"\", passwordTwo: \"\" });\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\r\n\r\n    const { passwordOne, passwordTwo } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return isEnabled ? (\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onUnlink(signInMethod.id)}\r\n        disabled={onlyOneLeft}\r\n      >\r\n        Deactivate {signInMethod.id}\r\n      </button>\r\n    ) : (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Link {signInMethod.id}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginManagement = withFirebase(LoginManagementBase);\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        {/*} <PasswordForgetForm /> */}\r\n        <PasswordChangeForm />\r\n        <LoginManagement authUser={authUser} />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => authUser != null;\r\n\r\nexport default withAuthorization(condition)(AccountPage);\r\n"]},"metadata":{},"sourceType":"module"}