{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/React/firebase-tutorial/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kyle/workspace/React/firebase-tutorial/src/components/Session/withAuthorization.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          this.props.firebase.user(authUser.uid).once(\"value\").then(snapshot => {\n            const dbUser = snapshot.val(); // default empty roles\n\n            if (!dbUser.roles) {\n              dbUser.roles = {};\n            } // merge auth and db user\n\n\n            authUser = _objectSpread({\n              uid: authUser.uid,\n              email: authUser.email\n            }, dbUser);\n\n            if (!condition(authUser)) {\n              this.props.history.push(ROUTES.SIGN_IN);\n            }\n          });\n        } else {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, authUser => condition(authUser) ? React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })) : null);\n    }\n\n  }\n\n  return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/Users/kyle/workspace/React/firebase-tutorial/src/components/Session/withAuthorization.js"],"names":["React","withRouter","compose","AuthUserContext","withFirebase","ROUTES","withAuthorization","condition","Component","WithAuthorization","componentDidMount","listener","props","firebase","auth","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","email","history","push","SIGN_IN","componentWillUnmount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAClD,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC9CE,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,kBAAzB,CAA4CC,QAAQ,IAAI;AACtE,YAAIA,QAAJ,EAAc;AACZ,eAAKJ,KAAL,CAAWC,QAAX,CACGI,IADH,CACQD,QAAQ,CAACE,GADjB,EAEGC,IAFH,CAEQ,OAFR,EAGGC,IAHH,CAGQC,QAAQ,IAAI;AAChB,kBAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAT,EAAf,CADgB,CAGhB;;AACA,gBAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACjBF,cAAAA,MAAM,CAACE,KAAP,GAAe,EAAf;AACD,aANe,CAQhB;;;AACAR,YAAAA,QAAQ;AACNE,cAAAA,GAAG,EAAEF,QAAQ,CAACE,GADR;AAENO,cAAAA,KAAK,EAAET,QAAQ,CAACS;AAFV,eAGHH,MAHG,CAAR;;AAMA,gBAAI,CAACf,SAAS,CAACS,QAAD,CAAd,EAA0B;AACxB,mBAAKJ,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwBtB,MAAM,CAACuB,OAA/B;AACD;AACF,WArBH;AAsBD,SAvBD,MAuBO;AACL,eAAKhB,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwBtB,MAAM,CAACuB,OAA/B;AACD;AACF,OA3Be,CAAhB;AA4BD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKlB,QAAL;AACD;;AAEDmB,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGd,QAAQ,IACPT,SAAS,CAACS,QAAD,CAAT,GAAsB,oBAAC,SAAD,oBAAe,KAAKJ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB,GAAsD,IAF1D,CADF;AAOD;;AA5C6C;;AA+ChD,SAAOV,OAAO,CACZD,UADY,EAEZG,YAFY,CAAP,CAGLK,iBAHK,CAAP;AAID,CApDD;;AAsDA,eAAeH,iBAAf","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          this.props.firebase\n            .user(authUser.uid)\n            .once(\"value\")\n            .then(snapshot => {\n              const dbUser = snapshot.val();\n\n              // default empty roles\n              if (!dbUser.roles) {\n                dbUser.roles = {};\n              }\n\n              // merge auth and db user\n              authUser = {\n                uid: authUser.uid,\n                email: authUser.email,\n                ...dbUser\n              };\n\n              if (!condition(authUser)) {\n                this.props.history.push(ROUTES.SIGN_IN);\n              }\n            });\n        } else {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n"]},"metadata":{},"sourceType":"module"}