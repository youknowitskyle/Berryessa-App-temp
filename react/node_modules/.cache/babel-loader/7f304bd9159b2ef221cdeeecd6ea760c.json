{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Support/index.js\";\nimport React, { Component } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport \"../Prayer/styles.css\";\nimport { AuthUserContext, withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport Replies from \"./reply\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst SupportPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Support Requests\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"If you need support for anything, please submit your request below.\"), React.createElement(Supports, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}));\n\nclass SupportsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onChangeCheckbox = event => {\n      this.setState({\n        [event.target.name]: event.target.checked\n      });\n    };\n\n    this.onCreateSupport = (event, authUser) => {\n      this.props.firebase.supports().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        username: authUser.username,\n        isAnonymous: this.state.isAnonymous,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onEditSupport = (support, text) => {\n      const uid = support.uid,\n            supportSnapshot = _objectWithoutProperties(support, [\"uid\"]);\n\n      this.props.firebase.support(support.uid).set(_objectSpread({}, supportSnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.onRemoveSupport = uid => {\n      this.props.firebase.support(uid).remove();\n    };\n\n    this.onNextPage = () => {\n      this.setState(state => ({\n        limit: state.limit + 5\n      }), this.onListenForSupports);\n    };\n\n    this.state = {\n      text: \"\",\n      isAnonymous: false,\n      loading: false,\n      supports: [],\n      limit: 5,\n      reply: null //becomes id of message\n\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForSupports();\n  }\n\n  onListenForSupports() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.supports().orderByChild(\"createdAt\").limitToLast(this.state.limit).on(\"value\", snapshot => {\n      const supportObject = snapshot.val();\n\n      if (supportObject) {\n        const supportList = Object.keys(supportObject).map(key => _objectSpread({}, supportObject[key], {\n          uid: key\n        })); // convert supports list from snapshot\n\n        this.setState({\n          supports: supportList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          supports: null,\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.supports().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          isAnonymous = _this$state.isAnonymous,\n          supports = _this$state.supports,\n          loading = _this$state.loading;\n    const isInvalid = text === \"\";\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, !loading && supports && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"More\"), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Loading ...\"), supports ? React.createElement(SupportList, {\n      authUser: authUser,\n      supports: supports,\n      onEditSupport: this.onEditSupport,\n      onRemoveSupport: this.onRemoveSupport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"There are no support requests ...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateSupport(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"support\",\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      placeholder: \"Send a support request...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Send Anonymously:\", \" \", React.createElement(\"input\", {\n      name: \"isAnonymous\",\n      type: \"checkbox\",\n      checked: isAnonymous,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \" \"), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst SupportList = ({\n  authUser,\n  supports,\n  onEditSupport,\n  onRemoveSupport\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 175\n  },\n  __self: this\n}, supports.map(support => (authUser.uid === support.userId || !!authUser.roles[ROLES.ADMIN] || !!authUser.roles[ROLES.MODERATOR]) && React.createElement(SupportItem, {\n  authUser: authUser,\n  key: support.uid,\n  support: support,\n  onEditSupport: onEditSupport,\n  onRemoveSupport: onRemoveSupport,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181\n  },\n  __self: this\n})));\n\nclass SupportItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.support.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditSupport(this.props.support, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.support.text\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          support = _this$props.support,\n          onRemoveSupport = _this$props.onRemoveSupport;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editText = _this$state2.editText;\n    const isInvalid = editText === \"\";\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, support.isAnonymous ? \"Anonymous\" : support.username, \":\", \" \"), support.text, support.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"(Edited)\")), authUser.uid === support.userId && React.createElement(Popup, {\n      trigger: open => React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, open ? \"Close\" : \":\"),\n      position: \"right top\",\n      closeOnDocumentClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"menu-item\",\n      type: \"button\",\n      disabled: isInvalid,\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      className: \"menu-item\",\n      type: \"button\",\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"span\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"menu-item\",\n      type: \"button\",\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"button\", {\n      className: \"menu-item\",\n      type: \"button\",\n      onClick: () => onRemoveSupport(support.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(Popup, {\n      trigger: React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Reply\"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"User: \", support.isAnonymous ? \"Anonymous\" : support.username), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, support.text), React.createElement(Replies, {\n      support: support,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass SupportViewBase extends SupportsBase {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          supports = _this$state3.supports,\n          loading = _this$state3.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, !loading && supports && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"More\"), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Loading ...\"), supports ? React.createElement(SupportList, {\n      authUser: authUser,\n      supports: supports,\n      onEditSupport: this.onEditSupport,\n      onRemoveSupport: this.onRemoveSupport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"There are no support requests ...\"))));\n  }\n\n}\n\nconst Supports = withFirebase(SupportsBase);\nconst SupportView = withFirebase(SupportViewBase);\n\nconst condition = authUser => !!authUser && (!!authUser.roles[ROLES.ADMIN] || !!authUser.roles[ROLES.MODERATOR] || !!authUser.roles[ROLES.APPROVED]); //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(SupportPage);\nexport { SupportView, Supports };","map":{"version":3,"sources":["/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Support/index.js"],"names":["React","Component","Popup","AuthUserContext","withAuthorization","withFirebase","Replies","ROLES","SupportPage","SupportsBase","constructor","props","onChangeText","event","setState","text","target","value","onChangeCheckbox","name","checked","onCreateSupport","authUser","firebase","supports","push","state","userId","uid","username","isAnonymous","createdAt","serverValue","TIMESTAMP","preventDefault","onEditSupport","support","supportSnapshot","set","editedAt","onRemoveSupport","remove","onNextPage","limit","onListenForSupports","loading","reply","componentDidMount","orderByChild","limitToLast","on","snapshot","supportObject","val","supportList","Object","keys","map","key","componentWillUnmount","off","render","isInvalid","SupportList","roles","ADMIN","MODERATOR","SupportItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","open","SupportViewBase","Supports","SupportView","condition","APPROVED"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Popup from \"reactjs-popup\";\n\nimport \"../Prayer/styles.css\";\n\nimport { AuthUserContext, withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport Replies from \"./reply\";\n\nimport * as ROLES from \"../../constants/roles\";\n\nconst SupportPage = () => (\n  <div>\n    <h1>Support Requests</h1>\n    <p>If you need support for anything, please submit your request below.</p>\n    <Supports />\n  </div>\n);\n\nclass SupportsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      isAnonymous: false,\n      loading: false,\n      supports: [],\n      limit: 5,\n      reply: null //becomes id of message\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForSupports();\n  }\n\n  onListenForSupports() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .supports()\n      .orderByChild(\"createdAt\")\n      .limitToLast(this.state.limit)\n      .on(\"value\", snapshot => {\n        const supportObject = snapshot.val();\n\n        if (supportObject) {\n          const supportList = Object.keys(supportObject).map(key => ({\n            ...supportObject[key],\n            uid: key\n          }));\n          // convert supports list from snapshot\n\n          this.setState({\n            supports: supportList,\n            loading: false\n          });\n        } else {\n          this.setState({ supports: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.supports().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  onCreateSupport = (event, authUser) => {\n    this.props.firebase.supports().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      username: authUser.username,\n      isAnonymous: this.state.isAnonymous,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n\n    this.setState({ text: \"\" });\n\n    event.preventDefault();\n  };\n\n  onEditSupport = (support, text) => {\n    const { uid, ...supportSnapshot } = support;\n\n    this.props.firebase.support(support.uid).set({\n      ...supportSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  onRemoveSupport = uid => {\n    this.props.firebase.support(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForSupports\n    );\n  };\n\n  render() {\n    const { text, isAnonymous, supports, loading } = this.state;\n\n    const isInvalid = text === \"\";\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading &&\n              supports && (\n                <button type=\"button\" onClick={this.onNextPage}>\n                  More\n                </button>\n              )}\n\n            {loading && <div>Loading ...</div>}\n\n            {supports ? (\n              <SupportList\n                authUser={authUser}\n                supports={supports}\n                onEditSupport={this.onEditSupport}\n                onRemoveSupport={this.onRemoveSupport}\n              />\n            ) : (\n              <div>There are no support requests ...</div>\n            )}\n\n            <form onSubmit={event => this.onCreateSupport(event, authUser)}>\n              <input\n                name=\"support\"\n                type=\"text\"\n                value={text}\n                onChange={this.onChangeText}\n                placeholder=\"Send a support request...\"\n              />\n              <label>\n                Send Anonymously:{\" \"}\n                <input\n                  name=\"isAnonymous\"\n                  type=\"checkbox\"\n                  checked={isAnonymous}\n                  onChange={this.onChangeCheckbox}\n                />{\" \"}\n              </label>\n              <button disabled={isInvalid} type=\"submit\">\n                Send\n              </button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst SupportList = ({\n  authUser,\n  supports,\n  onEditSupport,\n  onRemoveSupport\n}) => (\n  <ul>\n    {supports.map(\n      support =>\n        (authUser.uid === support.userId ||\n          !!authUser.roles[ROLES.ADMIN] ||\n          !!authUser.roles[ROLES.MODERATOR]) && (\n          <SupportItem\n            authUser={authUser}\n            key={support.uid}\n            support={support}\n            onEditSupport={onEditSupport}\n            onRemoveSupport={onRemoveSupport}\n          />\n        )\n    )}\n  </ul>\n);\n\nclass SupportItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.support.text\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.support.text\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditSupport(this.props.support, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, support, onRemoveSupport } = this.props;\n    const { editMode, editText } = this.state;\n\n    const isInvalid = editText === \"\";\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>\n              {support.isAnonymous ? \"Anonymous\" : support.username}:{\" \"}\n            </strong>\n            {support.text}\n            {support.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n        {authUser.uid === support.userId && (\n          <Popup\n            trigger={open => (\n              <button className=\"button\">{open ? \"Close\" : \":\"}</button>\n            )}\n            position=\"right top\"\n            closeOnDocumentClick\n          >\n            {editMode ? (\n              <span className=\"card\">\n                <button\n                  className=\"menu-item\"\n                  type=\"button\"\n                  disabled={isInvalid}\n                  onClick={this.onSaveEditText}\n                >\n                  Save\n                </button>\n                <button\n                  className=\"menu-item\"\n                  type=\"button\"\n                  onClick={this.onToggleEditMode}\n                >\n                  Reset\n                </button>\n              </span>\n            ) : (\n              <span className=\"card\">\n                <button\n                  className=\"menu-item\"\n                  type=\"button\"\n                  onClick={this.onToggleEditMode}\n                >\n                  Edit\n                </button>\n                <button\n                  className=\"menu-item\"\n                  type=\"button\"\n                  onClick={() => onRemoveSupport(support.uid)}\n                >\n                  Delete\n                </button>\n              </span>\n            )}\n          </Popup>\n        )}\n        <Popup\n          trigger={<button className=\"button\">Reply</button>}\n          modal\n          closeOnDocumentClick\n        >\n          <div>\n            <span>\n              User: {support.isAnonymous ? \"Anonymous\" : support.username}\n            </span>\n            <h1>{support.text}</h1>\n            <Replies support={support} />\n          </div>\n        </Popup>\n      </li>\n    );\n  }\n}\n\nclass SupportViewBase extends SupportsBase {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { supports, loading } = this.state;\n\n    return (\n      <div>\n        <AuthUserContext.Consumer>\n          {authUser => (\n            <div>\n              {!loading &&\n                supports && (\n                  <button type=\"button\" onClick={this.onNextPage}>\n                    More\n                  </button>\n                )}\n\n              {loading && <div>Loading ...</div>}\n\n              {supports ? (\n                <SupportList\n                  authUser={authUser}\n                  supports={supports}\n                  onEditSupport={this.onEditSupport}\n                  onRemoveSupport={this.onRemoveSupport}\n                />\n              ) : (\n                <div>There are no support requests ...</div>\n              )}\n            </div>\n          )}\n        </AuthUserContext.Consumer>\n      </div>\n    );\n  }\n}\n\nconst Supports = withFirebase(SupportsBase);\nconst SupportView = withFirebase(SupportViewBase);\n\nconst condition = authUser =>\n  !!authUser &&\n  (!!authUser.roles[ROLES.ADMIN] ||\n    !!authUser.roles[ROLES.MODERATOR] ||\n    !!authUser.roles[ROLES.APPROVED]);\n\n//or equivalently:\n//const condition = authUser => authUser != null;\n\nexport default withAuthorization(condition)(SupportPage);\n\nexport { SupportView, Supports };\n"]},"metadata":{},"sourceType":"module"}