{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/React/firebase-tutorial/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nconst config = {\n  apiKey: \"AIzaSyC_BBRfrZ5KzrhHksZRwrUOXu_Mj692eeE\",\n  authDomain: \"fir-react-a134c.firebaseapp.com\",\n  databaseURL: \"https://fir-react-a134c.firebaseio.com\",\n  projectId: \"fir-react-a134c\",\n  storageBucket: \"\",\n  messagingSenderId: \"811268788191\",\n  appId: \"1:811268788191:web:861f46195becaba3\"\n};\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    this.onAuthUserListener = (next, fallback) => this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid).once(\"value\").then(snapshot => {\n          const dbUser = snapshot.val(); //default empty roles\n\n          if (!dbUser.roles) {\n            dbUser.roles = {};\n          } // merge auth and db user\n\n\n          authUser = _objectSpread({\n            uid: authUser.uid,\n            email: authUser.email\n          }, dbUser);\n          next(authUser);\n        });\n      } else {\n        fallback();\n      }\n    });\n\n    this.user = uid => this.db.ref(\"users/\".concat(uid));\n\n    this.users = () => this.db.ref(\"users\");\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n  } // *** Auth API ***\n\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/Users/kyle/workspace/React/firebase-tutorial/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","db","ref","users","initializeApp","database","GoogleAuthProvider"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,iCAFC;AAGbC,EAAAA,WAAW,EAAE,wCAHA;AAIbC,EAAAA,SAAS,EAAE,iBAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;;AAUA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AAAA,SAWdC,gCAXc,GAWqB,CAACC,KAAD,EAAQC,QAAR,KACjC,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAZY;;AAAA,SAcdG,4BAdc,GAciB,CAACJ,KAAD,EAAQC,QAAR,KAC7B,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAfY;;AAAA,SAiBdK,kBAjBc,GAiBO,MAAM,KAAKJ,IAAL,CAAUK,eAAV,CAA0B,KAAKC,cAA/B,CAjBb;;AAAA,SAmBdC,SAnBc,GAmBF,MAAM,KAAKP,IAAL,CAAUQ,OAAV,EAnBJ;;AAAA,SAqBdC,eArBc,GAqBIX,KAAK,IAAI,KAAKE,IAAL,CAAUU,sBAAV,CAAiCZ,KAAjC,CArBb;;AAAA,SAuBda,gBAvBc,GAuBKZ,QAAQ,IAAI,KAAKC,IAAL,CAAUY,WAAV,CAAsBC,cAAtB,CAAqCd,QAArC,CAvBjB;;AAAA,SA2Bde,kBA3Bc,GA2BO,CAACC,IAAD,EAAOC,QAAP,KACnB,KAAKhB,IAAL,CAAUiB,kBAAV,CAA6BC,QAAQ,IAAI;AACvC,UAAIA,QAAJ,EAAc;AACZ,aAAKC,IAAL,CAAUD,QAAQ,CAACE,GAAnB,EACGC,IADH,CACQ,OADR,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,gBAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAT,EAAf,CADgB,CAGhB;;AACA,cAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACjBF,YAAAA,MAAM,CAACE,KAAP,GAAe,EAAf;AACD,WANe,CAQhB;;;AACAR,UAAAA,QAAQ;AACNE,YAAAA,GAAG,EAAEF,QAAQ,CAACE,GADR;AAENtB,YAAAA,KAAK,EAAEoB,QAAQ,CAACpB;AAFV,aAGH0B,MAHG,CAAR;AAMAT,UAAAA,IAAI,CAACG,QAAD,CAAJ;AACD,SAlBH;AAmBD,OApBD,MAoBO;AACLF,QAAAA,QAAQ;AACT;AACF,KAxBD,CA5BY;;AAAA,SAwDdG,IAxDc,GAwDPC,GAAG,IAAI,KAAKO,EAAL,CAAQC,GAAR,iBAAqBR,GAArB,EAxDA;;AAAA,SA0DdS,KA1Dc,GA0DN,MAAM,KAAKF,EAAL,CAAQC,GAAR,CAAY,OAAZ,CA1DA;;AACZ1C,IAAAA,GAAG,CAAC4C,aAAJ,CAAkB3C,MAAlB;AAEA,SAAKa,IAAL,GAAYd,GAAG,CAACc,IAAJ,EAAZ;AACA,SAAK2B,EAAL,GAAUzC,GAAG,CAAC6C,QAAJ,EAAV;AAEA,SAAKzB,cAAL,GAAsB,IAAIpB,GAAG,CAACc,IAAJ,CAASgC,kBAAb,EAAtB;AACD,GARY,CAUb;;;AAVa;;AA8Df,eAAerC,QAAf","sourcesContent":["import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyC_BBRfrZ5KzrhHksZRwrUOXu_Mj692eeE\",\n  authDomain: \"fir-react-a134c.firebaseapp.com\",\n  databaseURL: \"https://fir-react-a134c.firebaseio.com\",\n  projectId: \"fir-react-a134c\",\n  storageBucket: \"\",\n  messagingSenderId: \"811268788191\",\n  appId: \"1:811268788191:web:861f46195becaba3\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API ***\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once(\"value\")\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            //default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = {};\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              ...dbUser\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(\"users\");\n}\n\nexport default Firebase;\n"]},"metadata":{},"sourceType":"module"}