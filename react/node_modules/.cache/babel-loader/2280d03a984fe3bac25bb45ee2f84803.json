{"ast":null,"code":"import _objectSpread from \"/Users/kyle/workspace/React/firebase-tutorial/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kyle/workspace/React/firebase-tutorial/src/components/Home/index.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nconst HomePage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Home Page\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"You are authenticated.\"), React.createElement(Messages, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateMessage = event => {\n      this.props.firebase.messages().push({\n        text: this.state.text\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      message: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.messages().on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => _objectSpread({}, messageObject[key], {\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          messages: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Loading ...\"), messages ? React.createElement(MessageList, {\n      messages: messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"There are no messages...\"), React.createElement(\"form\", {\n      onSubmit: this.onCreateMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Send\")));\n  }\n\n}\n\nconst MessageList = ({\n  messages\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, messages.map(message => React.createElement(MessageItem, {\n  key: message.uid,\n  message: message,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n})));\n\nconst MessageItem = ({\n  message\n}) => React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, message.userId), \" \", message.text);\n\nconst Messages = withFirebase(MessagesBase);\n\nconst condition = authUser => !!authUser; //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(HomePage);","map":{"version":3,"sources":["/Users/kyle/workspace/React/firebase-tutorial/src/components/Home/index.js"],"names":["React","Component","compose","withAuthorization","withFirebase","HomePage","MessagesBase","constructor","props","onChangeText","event","setState","text","target","value","onCreateMessage","firebase","messages","push","state","preventDefault","loading","message","componentDidMount","on","snapshot","messageObject","val","messageList","Object","keys","map","key","uid","componentWillUnmount","off","render","MessageList","MessageItem","userId","Messages","condition","authUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>You are authenticated.</p>\n\n    <Messages />\n  </div>\n);\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      message: []\n    };\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = event => {\n    this.props.firebase.messages().push({\n      text: this.state.text\n    });\n\n    this.setState({ text: \"\" });\n\n    event.preventDefault();\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.messages().on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => ({\n          ...messageObject[key],\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({ messages: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const { text, messages, loading } = this.state;\n\n    return (\n      <div>\n        {loading && <div>Loading ...</div>}\n\n        {messages ? (\n          <MessageList messages={messages} />\n        ) : (\n          <div>There are no messages...</div>\n        )}\n\n        <form onSubmit={this.onCreateMessage}>\n          <input type=\"text\" value={text} onChange={this.onChangeText} />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst MessageList = ({ messages }) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem key={message.uid} message={message} />\n    ))}\n  </ul>\n);\n\nconst MessageItem = ({ message }) => (\n  <li>\n    <strong>{message.userId}</strong> {message.text}\n  </li>\n);\n\nconst Messages = withFirebase(MessagesBase);\n\nconst condition = authUser => !!authUser;\n\n//or equivalently:\n//const condition = authUser => authUser != null;\n\nexport default withAuthorization(condition)(HomePage);\n"]},"metadata":{},"sourceType":"module"}