{"ast":null,"code":"import _objectWithoutProperties from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/kyle/workspace/Projects/Berryessa-App/react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Home/index.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\n\nconst HomePage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Home Page\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"You are authenticated.\"), React.createElement(Messages, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Announcements\"), React.createElement(Announcements, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}));\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => _objectSpread({}, announcementObject[key], {\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          announcements: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          text = _this$state.text,\n          announcements = _this$state.announcements,\n          loading = _this$state.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Loading ...\"), announcements ? React.createElement(AnnouncementList, {\n      authUser: authUser,\n      announcements: announcements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"There are no announcements...\")));\n  }\n\n}\n\nconst AnnouncementList = ({\n  authUser,\n  announcements\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, announcements.map(announcement => React.createElement(AnnouncementItem, {\n  authUser: authUser,\n  key: announcement.uid,\n  announcement: announcement,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n})));\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          announcement = _this$props.announcement;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, announcement.title), \" \", announcement.text, \" (Posted by\", \" \", announcement.username, \")\", announcement.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" (Edited) \")));\n  }\n\n}\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateMessage = (event, authUser) => {\n      console.log(this.state.limit);\n      this.props.firebase.messages().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        username: authUser.username\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveMessage = uid => {\n      this.props.firebase.message(uid).remove();\n    };\n\n    this.onEditMessage = (message, text) => {\n      const uid = message.uid,\n            messageSnapshot = _objectWithoutProperties(message, [\"uid\"]);\n\n      this.props.firebase.message(message.uid).set(_objectSpread({}, messageSnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.onMore = () => {\n      this.setState(state => ({\n        limit: state.limit + 5\n      }), this.onListenForMessages);\n      console.log(\"more - \".concat(this.state.limit));\n    };\n\n    this.onLess = () => {\n      if (this.state.limit > 5) {\n        this.setState(state => ({\n          limit: state.limit - 5\n        }), this.onListenForMessages);\n      }\n\n      console.log(\"less - \".concat(this.state.limit));\n    };\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      message: [],\n      limit: 5\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages() {\n    this.props.firebase.messages().orderByChild(\"createdAt\").limitToLast(this.state.limit).on(\"value\", snapshot => {\n      const messageObject = snapshot.val();\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => _objectSpread({}, messageObject[key], {\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          messages: null,\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          text = _this$state2.text,\n          messages = _this$state2.messages,\n          loading = _this$state2.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, !loading && messages && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"More\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onLess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Less\")), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Loading ...\"), messages ? React.createElement(MessageList, {\n      authUser: authUser,\n      messages: messages,\n      onEditMessage: this.onEditMessage,\n      onRemoveMessage: this.onRemoveMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"There are no messages...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateMessage(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onRemoveMessage,\n  onEditMessage\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 268\n  },\n  __self: this\n}, messages.map(message => React.createElement(MessageItem, {\n  authUser: authUser,\n  key: message.uid,\n  message: message,\n  onEditMessage: onEditMessage,\n  onRemoveMessage: onRemoveMessage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 270\n  },\n  __self: this\n})));\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.message.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditMessage(this.props.message, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          authUser = _this$props2.authUser,\n          message = _this$props2.message,\n          onRemoveMessage = _this$props2.onRemoveMessage;\n    const _this$state3 = this.state,\n          editMode = _this$state3.editMode,\n          editText = _this$state3.editText;\n    const time = new Date(parseInt(message.editedAt)).toUTCString();\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, message.username), \" \", message.text, message.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \" (Edited at \", time, \") \")), authUser.uid === message.userId && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveMessage(message.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst Messages = withFirebase(MessagesBase);\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser => !!authUser; //or equivalently:\n//const condition = authUser => authUser != null;\n\n\nexport default withAuthorization(condition)(HomePage);","map":{"version":3,"sources":["/Users/kyle/workspace/Projects/Berryessa-App/react/src/components/Home/index.js"],"names":["React","Component","compose","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","tsImportEqualsDeclaration","HomePage","AnnouncementsBase","constructor","props","state","title","text","loading","announcement","componentDidMount","setState","firebase","announcements","on","snapshot","announcementObject","val","announcementList","Object","keys","map","key","uid","componentWillUnmount","off","render","authUser","AnnouncementList","AnnouncementItem","username","editedAt","MessagesBase","onChangeText","event","target","value","onCreateMessage","console","log","limit","messages","push","userId","createdAt","serverValue","TIMESTAMP","preventDefault","onRemoveMessage","message","remove","onEditMessage","messageSnapshot","set","onMore","onListenForMessages","onLess","orderByChild","limitToLast","messageObject","messageList","MessageList","MessageItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","time","Date","parseInt","toUTCString","Messages","Announcements","condition"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>You are authenticated.</p>\n\n    <Messages />\n\n    <br />\n    <h2>Announcements</h2>\n    <Announcements />\n  </div>\n);\n\nclass AnnouncementsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      text: \"\",\n      loading: false,\n      announcement: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.announcements().on(\"value\", snapshot => {\n      const announcementObject = snapshot.val();\n\n      if (announcementObject) {\n        const announcementList = Object.keys(announcementObject).map(key => ({\n          ...announcementObject[key],\n          uid: key\n        }));\n        this.setState({\n          announcements: announcementList,\n          loading: false\n        });\n      } else {\n        this.setState({ announcements: null, loading: false });\n      }\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.announcements().off();\n  }\n\n  render() {\n    const { title, text, announcements, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {loading && <div>Loading ...</div>}\n\n            {announcements ? (\n              <AnnouncementList\n                authUser={authUser}\n                announcements={announcements}\n              />\n            ) : (\n              <div>There are no announcements...</div>\n            )}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst AnnouncementList = ({ authUser, announcements }) => (\n  <ul>\n    {announcements.map(announcement => (\n      <AnnouncementItem\n        authUser={authUser}\n        key={announcement.uid}\n        announcement={announcement}\n      />\n    ))}\n  </ul>\n);\n\nclass AnnouncementItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const { authUser, announcement } = this.props;\n\n    return (\n      <li>\n        {\n          <span>\n            <strong>{announcement.title}</strong> {announcement.text} (Posted by{\" \"}\n            {announcement.username})\n            {announcement.editedAt && <span> (Edited) </span>}\n          </span>\n        }\n      </li>\n    );\n  }\n}\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      message: [],\n      limit: 5\n    };\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    console.log(this.state.limit);\n\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n      username: authUser.username\n    });\n\n    this.setState({ text: \"\" });\n\n    event.preventDefault();\n  };\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages() {\n    this.props.firebase\n      .messages()\n      .orderByChild(\"createdAt\")\n      .limitToLast(this.state.limit)\n      .on(\"value\", snapshot => {\n        const messageObject = snapshot.val();\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key\n          }));\n          this.setState({\n            messages: messageList,\n            loading: false\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n\n        this.setState({ loading: false });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onEditMessage = (message, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  onMore = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages\n    );\n    console.log(`more - ${this.state.limit}`);\n  };\n\n  onLess = () => {\n    if (this.state.limit > 5) {\n      this.setState(\n        state => ({ limit: state.limit - 5 }),\n        this.onListenForMessages\n      );\n    }\n    console.log(`less - ${this.state.limit}`);\n  };\n\n  render() {\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading && messages && (\n              <React.Fragment>\n                <button type=\"button\" onClick={this.onMore}>\n                  More\n                </button>\n                <button type=\"button\" onClick={this.onLess}>\n                  Less\n                </button>\n              </React.Fragment>\n            )}\n\n            {loading && <div>Loading ...</div>}\n\n            {messages ? (\n              <MessageList\n                authUser={authUser}\n                messages={messages}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            ) : (\n              <div>There are no messages...</div>\n            )}\n\n            <form onSubmit={event => this.onCreateMessage(event, authUser)}>\n              <input type=\"text\" value={text} onChange={this.onChangeText} />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onRemoveMessage,\n  onEditMessage\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        authUser={authUser}\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    const time = new Date(parseInt(message.editedAt)).toUTCString();\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>{message.username}</strong> {message.text}\n            {message.editedAt && <span> (Edited at {time}) </span>}\n          </span>\n        )}\n        {authUser.uid === message.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <button onClick={this.onSaveEditText}>Save</button>\n                <button onClick={this.onToggleEditMode}>Reset</button>\n              </span>\n            ) : (\n              <button onClick={this.onToggleEditMode}>Edit</button>\n            )}\n\n            {!editMode && (\n              <button\n                type=\"button\"\n                onClick={() => onRemoveMessage(message.uid)}\n              >\n                Delete\n              </button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\n\nconst Messages = withFirebase(MessagesBase);\nconst Announcements = withFirebase(AnnouncementsBase);\n\nconst condition = authUser => !!authUser;\n\n//or equivalently:\n//const condition = authUser => authUser != null;\n\nexport default withAuthorization(condition)(HomePage);\n"]},"metadata":{},"sourceType":"module"}